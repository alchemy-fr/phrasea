version: '3.4'

services:
  uploader_client:
    command: ["/bin/sh", "-c", "exit"]

  uploader_client_dev:
    build:
      context: ./uploader/client
      target: uploader_client_build
    networks:
      - internal
    volumes:
      - ./uploader/client:/usr/src/app
      - ./configs:/configs
    environment:
      - DEV_MODE
      - UPLOADER_BASE_URL
      - SIGN_UP_URL
      - AUTH_BASE_URL
      - CLIENT_ID=${UPLOADER_CLIENT_ID}_${UPLOADER_CLIENT_RANDOM_ID}
      - CLIENT_SECRET=${UPLOADER_CLIENT_SECRET}
      - CLIENT_LOGO_SRC
      - CLIENT_LOGO_X_MARGIN
      - CLIENT_LOGO_Y_MARGIN
    ports:
      - 127.0.0.1:3001:3000

  uploader_api_php:
    volumes:
      - ./uploader/api:/srv/app

  uploader_worker:
    volumes:
      - ./uploader/api:/srv/app
      - ./uploader/api/docker/supervisor:/etc/supervisor.d

  uploader_api_nginx:
    volumes:
      - ./uploader/api:/srv/app

  auth_worker:
    volumes:
      - ./auth/api:/srv/app
      - ./auth/api/docker/supervisor:/etc/supervisor.d

  auth_api_php:
    volumes:
      - ./auth/api:/srv/app

  auth_api_nginx:
    volumes:
      - ./auth/api:/srv/app

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - internal
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    depends_on:
      - db

  mailhog:
    image: mailhog/mailhog
    networks:
      - internal
    ports:
      - 8025:8025

  expose_api_php:
    volumes:
      - ./expose/api:/srv/app

  expose_api_nginx:
    volumes:
      - ./expose/api:/srv/app

  expose_worker:
    volumes:
      - ./expose/api:/srv/app
      - ./expose/api/docker/supervisor:/etc/supervisor.d

  notify_api_php:
    volumes:
      - ./notify/api:/srv/app

  notify_api_nginx:
    volumes:
      - ./notify/api:/srv/app
    ports:
      - 8031:80

  notify_worker:
    volumes:
      - ./notify/api:/srv/app
      - ./notify/api/docker/supervisor:/etc/supervisor.d

  minio:
    ports:
      - 127.0.0.1:${MINIO_PORT}:9000

  dev:
    build: infra/docker/dev
    networks:
      - internal
    stdin_open: true
    tty: true
    hostname: local
    environment:
      - APP_ENV
      - SSH_AUTH_SOCK=/ssh-auth-sock
    working_dir: /var/workspace
    volumes:
      - ./:/var/workspace
      - ${SSH_AUTH_SOCK}:/ssh-auth-sock
      - ${HOME}/.ssh:/home/app/.ssh
      - dev_vol:/home/app

volumes:
  dev_vol:
    driver: local
