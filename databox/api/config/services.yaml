# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    default_locale: 'en'
    env(VERIFY_SSL): true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $defaultLocale: '%default_locale%'

    _instanceof:
        Doctrine\Common\EventSubscriber:
            tags: ['doctrine.event_subscriber']
        Arthem\Bundle\RabbitBundle\Consumer\Event\EventMessageHandlerInterface:
            tags: ['arthem_rabbit.event_handler']
        Symfony\Component\EventDispatcher\EventSubscriberInterface:
            tags: ['kernel.event_subscriber']
        App\Attribute\Type\AttributeTypeInterface:
            tags: ['app.attribute_type']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Elasticsearch\AssetSearch:
        arguments:
            - '@fos_elastica.finder.asset'

    App\Elasticsearch\CollectionSearch:
        arguments:
            - '@fos_elastica.finder.collection'

    App\Elasticsearch\Listener\DeferredIndexListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: flush }
            - { name: kernel.event_listener, event: console.terminate, method: flush }
            - { name: kernel.event_listener, event: rabbit_handler.terminate, method: flush }

    App\Elasticsearch\ESSearchIndexer:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: flush }
            - { name: kernel.event_listener, event: console.terminate, method: flush }
            - { name: kernel.event_listener, event: rabbit_handler.terminate, method: flush }

    App\Listener\TerminateStackListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: onTerminate }
            - { name: kernel.event_listener, event: console.terminate, method: onTerminate }
            - { name: kernel.event_listener, event: rabbit_handler.terminate, method: onTerminate }

    App\Api\Serializer\SecurityContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Api\Serializer\SecurityContextBuilder.inner' ]
        autoconfigure: false

    app.border.http_client:
        class: GuzzleHttp\Client
        arguments:
            -
                verify: '%env(bool:VERIFY_SSL)%'

    app.file_downloader.http_client:
        class: GuzzleHttp\Client
        arguments:
            -
                verify: '%env(bool:VERIFY_SSL)%'

    App\Border\UploaderClient:
        arguments:
            $client: '@app.border.http_client'

    App\Border\FileDownloader:
        arguments:
            $client: '@app.file_downloader.http_client'

    app.phraseanet.api_client:
        class: GuzzleHttp\Client
        arguments:
            -
                base_uri: '%env(PHRASEANET_BASE_URL)%'
                verify: '%env(bool:VERIFY_SSL)%'

    App\External\PhraseanetApiClient:
        arguments:
            $client: '@app.phraseanet.api_client'
            $oauthToken: '%env(PHRASEANET_APP_OAUTH_TOKEN)%'

    App\Storage\UrlSigner:
        $client: '@alchemy_storage.s3_client'
        $bucketName: '%env(S3_STORAGE_BUCKET_NAME)%'
        $ttl: '%env(DATABOX_REQUEST_SIGNATURE_TTL)%'

    App\Security\JWTTokenManager:
        arguments:
            $signingKey: '%env(APP_SECRET)%'
            $ttl: 86400

    App\Elasticsearch\Mapping\IndexMappingUpdater:
        arguments:
            $client: '@fos_elastica.client'
            $index: '@fos_elastica.index.asset'

    App\Elasticsearch\DeleteManager:
        arguments:
            $client: '@fos_elastica.client'
            $indices:
                - '@fos_elastica.index.collection'
                - '@fos_elastica.index.asset'

