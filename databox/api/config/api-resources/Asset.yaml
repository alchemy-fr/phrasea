resources:
  App\Entity\Core\Asset:
    shortName: asset
    attributes:
      normalization_context:
        groups:
          - asset:index
      output: App\Api\Model\Output\AssetOutput
      input: App\Api\Model\Input\AssetInput
    itemOperations:
      get: ~
      delete:
        security: 'is_granted("DELETE", object)'
      put:
        security: 'is_granted("EDIT", object)'
      patch:
        security: 'is_granted("EDIT", object)'
      post_trigger_workflow:
        method: POST
        path: /assets/{id}/trigger-workflow
        controller: App\Controller\Core\TriggerAssetWorkflowAction
        read: false
        security: 'is_granted("EDIT", object)'
      post_batch_attributes:
        attributes:
          receive: true
        method: POST
        path: /assets/{id}/attributes
        input: App\Api\Model\Input\Attribute\AssetAttributeBatchUpdateInput
        controller: App\Controller\Core\AssetAttributeBatchUpdateAction
        security: 'is_granted("EDIT_ATTRIBUTES", object)'
    collectionOperations:
      get: ~
      post:
        security_post_denormalize: 'is_granted("CREATE", object)'
      delete_by_key:
        method: DELETE
        path: /assets-by-keys
        controller: App\Controller\Core\DeleteAssetByKeysAction
      delete_by_ids:
        method: DELETE
        path: /assets
        controller: App\Controller\Core\DeleteAssetByIdsAction
      post_move:
        attributes:
          receive: true
        input: App\Api\Model\Input\MoveAssetInput
        method: POST
        path: /assets/move
        controller: App\Controller\Core\MoveAssetsAction
      post_copy:
        attributes:
          receive: true
        input: App\Api\Model\Input\CopyAssetInput
        method: POST
        path: /assets/copy
        controller: App\Controller\Core\CopyAssetsAction
