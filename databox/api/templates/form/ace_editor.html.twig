{% block ace_editor_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
    <div id="{{ id }}_ace" {% for attrname, attrvalue in wrapper_attr %}{% if attrname == 'title' %}{{ attrname }}="{{ attrvalue|trans({}, translation_domain) }}" {% else %}{{ attrname }}="{{ attrvalue }}" {% endif %}{% endfor %}></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.min.js" integrity="sha512-GoORoNnxst42zE3rYPj4bNBm0Q6ZRXKNH2D9nEmNvVF/z24ywVnijAWVi/09iBiVDQVf3UlZHpzhAJIdd9BXqw==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ext-language_tools.min.js" integrity="sha512-8qx1DL/2Wsrrij2TWX5UzvEaYOFVndR7BogdpOyF4ocMfnfkw28qt8ULkXD9Tef0bLvh3TpnSAljDC7uyniEuQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/mode-json.min.js" integrity="sha512-VZZMcLUCIF2nfbd/WddhQvF0/K/hWtKLTMEEc3/ouKX3ceCgEEPJR/c1buV/XDm1lMJrP9ZZ4izN+3VUZxCGHA==" crossorigin="anonymous"></script>
    <script type="text/javascript">
        (function () {
            var langTools = ace.require('ace/ext/language_tools');
            var textarea = document.getElementById('{{ id }}'),
                editorElm = document.getElementById('{{ id }}_ace'),
                editor = ace.edit(editorElm),
                width = {{ width.value }},
                widthUnit = '{{ width.unit }}',
                height = {{ height.value }},
                heightUnit = '{{ height.unit }}';
            textarea.style.visibility = 'hidden';
            textarea.style.width = width + widthUnit;
            textarea.style.height = height + heightUnit;
            editorElm.style.fontSize='{{ font_size }}px';
            editorElm.style.width = width + widthUnit;
            editorElm.style.height = height + heightUnit;
            editorElm.style.marginTop = -(height) + heightUnit;
            editor.setTheme("{{ theme }}");
            {% if keyboard_handler is not null %}
            editor.setKeyboardHandler("{{ keyboard_handler }}");
            {% endif %}
            editor.getSession().setMode("{{ mode }}");
            editor.getSession().setValue(textarea.value);
            {% if read_only is not null %}
            editor.setReadOnly({{ read_only ? 'true' : 'false' }});
            {% endif %}
            {% if show_print_margin is not null %}
            editor.setShowPrintMargin({{ show_print_margin ? 'true' : 'false' }});
            {% endif %}
            {% if show_invisibles is not null %}
            editor.setShowInvisibles({{ show_invisibles ? 'true' : 'false' }});
            {% endif %}
            {% if highlight_active_line is not null %}
            editor.setHighlightActiveLine({{ highlight_active_line ? 'true' : 'false' }});
            {% endif %}
            {% if tab_size is not null %}
            editor.getSession().setTabSize({{ tab_size }});
            {% endif %}
            {% if use_soft_tabs is not null %}
            editor.getSession().setUseSoftTabs({{ use_soft_tabs ? 'true' : 'false' }});
            {% endif %}
            {% if use_wrap_mode is not null %}
            editor.getSession().setUseWrapMode({{ use_wrap_mode ? 'true' : 'false' }});
            {% endif %}
            editor.setOptions({
                {% if options_enable_basic_autocompletion is not null %}
                enableBasicAutocompletion: {{ options_enable_basic_autocompletion ? 'true' : 'false' }},
                {% endif %}
                {% if options_enable_live_autocompletion is not null %}
                enableLiveAutocompletion: {{ options_enable_live_autocompletion ? 'true' : 'false' }},
                {% endif %}
                {% if options_enable_snippets is not null %}
                enableSnippets: {{ options_enable_snippets ? 'true' : 'false' }},
                {% endif %}
            });
            editor.getSession().on('change', function(){
                textarea.value = editor.getSession().getValue();
            });
            if (typeof window.aceEditors === 'undefined') {
                window.aceEditors = {};
            }
            window.aceEditors['{{ id }}'] = editor;

            var staticWordCompleter = {
                getCompletions: function(editor, session, pos, prefix, callback) {
                    var wordList = ["foo", "bar", "baz"];
                    callback(null, wordList.map(function(word) {
                        return {
                            caption: word,
                            value: word,
                            meta: "static"
                        };
                    }));
                }
            }
            langTools.setCompleters([staticWordCompleter]);


        }());
    </script>
{% endblock %}
