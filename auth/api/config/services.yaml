# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.allowed_invite_delay: 3600

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            OAuth2\OAuth2 $oAuth2Server: "@fos_oauth_server.server"
            array $identityProviders: '%app.identity_providers%'
            array $loginFormLayout: '%app.login_form_layout%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,OAuth/OAuthProviderFactory.php,Saml/SamlGroupManager.php}'

    _instanceof:
        Arthem\Bundle\RabbitBundle\Consumer\Event\EventMessageHandlerInterface:
            tags: ['arthem_rabbit.event_handler']
        HWI\Bundle\OAuthBundle\OAuth\ResourceOwnerInterface:
            tags: ['app.resource_owner']

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\Admin\DashboardController:
      calls:
        - setSiteTitle: [ '%alchemy_admin.site_title%' ]
        - setSiteLogo: [ '%alchemy_admin.site_logo%' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Fixture\Factory\UserPasswordFactory:
        public: true

    App\Listener\ApiExceptionListener:
        arguments:
            $debug: '%kernel.debug%'

    App\Doctrine\Listener\UserDeleteListener:
        tags:
            - { name: doctrine.orm.entity_listener }

    App\User\UserManager:
        arguments:
            $validateEmail: '%env(bool:REGISTRATION_VALIDATE_EMAIL)%'

    guzzle.request_factory:
        class: Http\Message\MessageFactory\GuzzleMessageFactory

    Http\Client\Common\HttpMethodsClient:
        arguments:
            $httpClient: "@httplug.client.default"
            $requestFactory: '@guzzle.request_factory'

    HWI\Bundle\OAuthBundle\OAuth\RequestDataStorageInterface:
        alias: App\OAuth\BlackHoleOAuthStorage

    App\User\InviteManager:
        arguments:
            $allowedInviteDelay: '%app.allowed_invite_delay%'

    App\Controller\TokenInfoAction:
        arguments:
            $tokenManager: "@fos_oauth_server.access_token_manager.default"

    saml_user_factory:
        class: App\Saml\SamlUserFactory

    App\Admin\AuthCheckController:
        arguments:
            $authClientId: '%env(ADMIN_CLIENT_ID)%'

    security.user_checker:
        alias: "App\\Security\\UserChecker"
