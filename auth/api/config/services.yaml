# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.allowed_invite_delay: 3600

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,OAuth/OAuthProviderFactory.php}'

    _instanceof:
        Arthem\Bundle\RabbitBundle\Consumer\Event\EventMessageHandlerInterface:
            tags: ['arthem_rabbit.event_handler']
        HWI\Bundle\OAuthBundle\OAuth\ResourceOwnerInterface:
            tags: ['app.resource_owner']

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Fixture\Factory\UserPasswordFactory:
        public: true

    App\Listener\ApiExceptionListener:
        arguments:
            $debug: '%kernel.debug%'

    App\Listener\RouterContextListener:
        arguments:
            $baseUrl: '%env(AUTH_BASE_URL)%'

    App\Doctrine\Listener\UserDeleteListener:
        tags:
            - { name: doctrine.orm.entity_listener }

    App\User\UserManager:
        arguments:
            $validateEmail: '%env(bool:REGISTRATION_VALIDATE_EMAIL)%'

    Http\Client\Common\HttpMethodsClient:
        arguments:
            $httpClient: "@httplug.client.default"

    HWI\Bundle\OAuthBundle\OAuth\RequestDataStorageInterface:
        alias: App\OAuth\BlackHoleOAuthStorage

    App\Controller\OAuthController:
        arguments:
            $oAuth2Server: "@fos_oauth_server.server"

    App\User\InviteManager:
        arguments:
            $allowedInviteDelay: '%app.allowed_invite_delay%'

    App\Form\AllowedScopesChoiceType:
        arguments:
            $scopes: '%oauth.allowed_scopes%'

    App\Controller\TokenInfoAction:
        arguments:
            $tokenManager: "@fos_oauth_server.access_token_manager.default"

    App\Doctrine\Listener\AccessTokenListener:
        tags:
            - { name: doctrine.orm.entity_listener, lazy: true }
