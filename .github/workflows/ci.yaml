name: CI

on: [push]

env:
  COMPOSE_PROJECT_NAME: build
  PS_SUBNET: 172.34.202.0/16
  PS_GATEWAY_IP: 172.34.0.1
  PHRASEA_DOMAIN: phrasea.local
  TRAEFIK_HTTPS_PORT: 4442
  TRAEFIK_HTTP_PORT: 8042
  HTTPS_PORT_PREFIX: ':4442'
  REGISTRY_NAMESPACE: ghcr.io/${{ github.repository_owner }}/ps-
  DOCKER_TAG: ${{ github.sha }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  build_php-fpm-base:
    name: 'Build php-fpm-base'
    uses: ./.github/workflows/build_base.yaml
    with:
      images: php-fpm-base
    secrets: inherit

  build_nginx-fpm-base:
    name: 'Build nginx-fpm-base'
    uses: ./.github/workflows/build_base.yaml
    with:
      images: nginx-fpm-base
    secrets: inherit

  build_nodejs-base:
    name: 'Build nodejs-base'
    uses: ./.github/workflows/build_base.yaml
    with:
      images: nodejs-base
    secrets: inherit

  build_nginx-cache-purge:
    name: 'Build nginx-cache-purge'
    uses: ./.github/workflows/build_base.yaml
    with:
      images: nginx-cache-purge
    secrets: inherit

  build_auth_api:
    name: 'Build Auth API'
    uses: ./.github/workflows/build.yaml
    with:
      images: auth-api-php auth-api-nginx auth-worker
      withLibs: true
    secrets: inherit
    needs:
      - build_php-fpm-base
      - build_nginx-fpm-base

  build_dashboard:
    name: 'Build Dashboard'
    uses: ./.github/workflows/build.yaml
    with:
      images: dashboard
    secrets: inherit

  build_databox_api:
    name: 'Build Databox API'
    uses: ./.github/workflows/build.yaml
    with:
      images: databox-api-php databox-api-nginx databox-worker
      withLibs: true
    secrets: inherit
    needs:
      - build_php-fpm-base
      - build_nginx-fpm-base

  build_databox_client:
    name: 'Build Databox Client'
    uses: ./.github/workflows/build.yaml
    with:
      images: databox-client
    secrets: inherit
    needs:
      - build_nodejs-base

  build_databox_indexer:
    name: 'Build Databox Indexer'
    uses: ./.github/workflows/build.yaml
    with:
      images: databox-indexer
    secrets: inherit

  build_expose_api:
    name: 'Build Expose API'
    uses: ./.github/workflows/build.yaml
    with:
      images: expose-api-php expose-api-nginx expose-worker
      withLibs: true
    secrets: inherit
    needs:
      - build_php-fpm-base
      - build_nginx-cache-purge

  build_expose_client:
    name: 'Build Expose Client'
    uses: ./.github/workflows/build.yaml
    with:
      images: expose-client
    secrets: inherit
    needs:
      - build_nodejs-base

  build_matomo:
    name: 'Build Matomo'
    uses: ./.github/workflows/build.yaml
    with:
      images: matomo-php matomo-nginx
    secrets: inherit

  build_notify_api:
    name: 'Build Notify API'
    uses: ./.github/workflows/build.yaml
    with:
      images: notify-api-php notify-api-nginx notify-worker
      withLibs: true
    secrets: inherit
    needs:
      - build_php-fpm-base
      - build_nginx-fpm-base

  build_report_api:
    name: 'Build Report API'
    uses: ./.github/workflows/build.yaml
    with:
      images: report-api
    secrets: inherit

  build_uploader_api:
    name: 'Build Uploader API'
    uses: ./.github/workflows/build.yaml
    with:
      images: uploader-api-php uploader-api-nginx uploader-worker
      withLibs: true
    secrets: inherit
    needs:
      - build_php-fpm-base
      - build_nginx-fpm-base

  build_uploader_client:
    name: 'Build Uploader Client'
    uses: ./.github/workflows/build.yaml
    with:
      images: uploader-client
    secrets: inherit
    needs:
      - build_nodejs-base

  setup:
    name: 'Setup stack'
    runs-on: ubuntu-latest
    needs:
      - build_auth_api
      - build_dashboard
      - build_databox_api
      - build_databox_client
      - build_databox_indexer
      - build_expose_api
      - build_expose_client
      - build_matomo
      - build_notify_api
      - build_report_api
      - build_uploader_api
      - build_uploader_client

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup
        run: |
          docker-compose pull
          docker-compose down --volumes
          sudo PHRASEA_DOMAIN=${PHRASEA_DOMAIN} bin/dev/append-etc-hosts.sh
          bin/setup.sh
      - name: Test
        run: bin/test.sh
      - name: Clean containers
        if: ${{ always() }}
        run: |
          docker-compose down --volumes
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push images
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        run: |
          set -x
          if [[ -z "${DOCKERHUB_USERNAME}" ]]; then
            docker image ls
            docker image ls | grep ${DOCKER_TAG}
            docker image ls | grep ${DOCKER_TAG} | awk '{ print $1 }'
            docker image ls | grep ${DOCKER_TAG} | awk '{ print $1 }' | xargs -I {} echo docker tag {}:${DOCKER_TAG} {}:latest
            docker image ls | grep ${DOCKER_TAG} | awk '{ print $1 }' | xargs -I {} echo docker tag {}:${DOCKER_TAG} {}:latest | sed "s,${REGISTRY_NAMESPACE},alchemyfr/ps-,2"
            docker image ls | grep ${DOCKER_TAG} | awk '{ print $1 }' | xargs -I {} echo docker tag {}:${DOCKER_TAG} {}:latest | sed "s,${REGISTRY_NAMESPACE},alchemyfr/ps-,2" | bash
            REGISTRY_NAMESPACE=alchemyfr/ps- DOCKER_TAG=latest docker-compose push
          else
            echo "Publish step skipped."
          fi
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1