alchemy_admin:
  service:
    title: Uploader
    name: uploader

easy_admin:
  design:
    menu:
      - label: 'Permissions'
        children:
          - { label: 'Target params permissions', route: admin_global_permissions, params: { type: target_params } }
          - { label: 'Form schema permissions', route: admin_global_permissions, params: { type: form_schema } }
          - { label: 'All permissions (advanced)', entity: AccessControlEntry }
      - label: 'Uploads'
        children:
          - Target
          - Commit
          - Asset
          - MultipartUpload
      - label: 'Data'
        children:
          - FormSchema
          - TargetParams
      - OAuthClient
      - label: 'Dev'
        children:
          - FailedEvent
          - { label: 'PHP Info', route: 'alchemy_admin_phpinfo' }
  entities:
    Target:
      class: App\Entity\Target
      list:
        sort: [name, ASC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - name
          - { property: pullModeUrl, label: 'Pull mode URL', template: '@AlchemyAdmin/list/code.html.twig' }
          - targetUrl
          - createdAt
      form:
        fields:
          - name
          - description
          - targetUrl
          - { property: targetAccessToken }
          - { property: defaultDestination }
          - { property: allowedGroups, type: collection }

    Commit:
      disabled_actions:
        - new
      class: App\Entity\Commit
      list:
        actions:
          - triggerAgain
        batch_actions:
          - delete
        sort: [createdAt, DESC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - target
          - { property: userId, template: '@AlchemyAdmin/list/id.html.twig' }
          - assetCount
          - token
          - { property: acknowledged, type: boolean }
          - { property: totalSize, template: '@AlchemyAdmin/list/file_size.html.twig' }
          - notifyEmail
          - createdAt
      form:
        fields:
          - userId
          - token
          - acknowledged
          - { property: formDataJson, label: Form data, type: textarea }
          - notifyEmail

    Asset:
      class: App\Entity\Asset
      disabled_actions:
        - new
        - edit
      list:
        batch_actions:
          - delete
        sort: [createdAt, DESC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - target
          - originalName
          - { property: size, template: '@AlchemyAdmin/list/file_size.html.twig' }
          - { property: userId, template: '@AlchemyAdmin/list/id.html.twig' }
          - { property: committed, type: boolean }
          - { property: acknowledged, type: boolean }
          - createdAt

    FormSchema:
      class: App\Entity\FormSchema
      list:
        actions:
          - permissions
        sort: [createdAt, DESC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - target
          - locale
          - createdAt
      form:
        fields:
          - target
          - { property: locale }
          - { property: jsonData }

    TargetParams:
      class: App\Entity\TargetParams
      list:
        actions:
          - permissions
        sort: [createdAt, DESC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - target
          - updatedAt
          - createdAt
      form:
        fields:
          - target
          - { property: jsonData }

    MultipartUpload:
      class: Alchemy\StorageBundle\Entity\MultipartUpload
      disabled_actions:
        - new
        - edit
      list:
        batch_actions:
          - delete
        sort: [createdAt, DESC]
        fields:
          - { property: id, template: '@AlchemyAdmin/list/id.html.twig' }
          - filename
          - type
          - { property: size, template: '@AlchemyAdmin/list/file_size.html.twig' }
          - path
          - uploadId
          - { property: complete, type: boolean }
          - createdAt
