apiVersion: apps/v1
kind: Deployment
metadata:
  name: phraseanet-service-expose-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phraseanet-service
      tier: expose-worker
  template:
    metadata:
      labels:
        app: phraseanet-service
        tier: expose-worker
    spec:
      volumes:
      - name: configs
        configMap:
          name: {{ .Values.volumes.configs.configmap_name }}
      containers:
      - name: expose-worker
        image: {{ .Values.repository.baseurl }}/ps-expose-worker:{{ .Values.repository.tag }}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: configs
          mountPath: "/configs"
        env:
        - name: APP_ENV
          value: "prod"
        - name: APP_ID
          value: "{{ .Values.params.app_id }}"
        - name: DB_USER
          value: "{{ .Values.params.db_user }}"
        - name: DB_PASSWORD
          value: "{{ .Values.params.db_password }}"
        - name: RABBITMQ_HOST
          value: "{{ .Values.params.rabbitmq_host }}"
        - name: RABBITMQ_PORT
          value: "{{ .Values.params.rabbitmq_port }}"
        - name: RABBITMQ_USER
          value: "{{ .Values.params.rabbitmq_user }}"
        - name: RABBITMQ_PASSWORD
          value: "{{ .Values.params.rabbitmq_password }}"
        - name: STORAGE_BASE_URL
          value: "{{ .Values.params.storage_base_url }}"
        - name: STORAGE_BUCKET_NAME
          value: "{{ .Values.params.storage_bucket_name }}"
        - name: REPORT_BASE_URL
          value: "{{ .Values.params.report_base_url }}"
        - name: S3_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.aws.secret.name }}
              key: {{ .Values.aws.secret.key_name.access_key }}
        - name: S3_STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.aws.secret.name }}
              key: {{ .Values.aws.secret.key_name.secret_key }}
