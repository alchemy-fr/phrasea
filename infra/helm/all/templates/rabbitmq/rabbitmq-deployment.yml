apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: phraseanet-services
      tier: rabbitmq
  template:
    metadata:
      labels:
        app: phraseanet-services
        tier: rabbitmq
    spec:
      volumes:
      - name: data
      {{- if .Values.rabbitmq.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.rabbitmq.persistence.existingClaim | default (printf "%s-rabbitmq" (include "ps.fullname" .)) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "rabbitmq"
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7.14-management
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: data
          mountPath: "/var/lib/rabbitmq"
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        - secretRef:
            name: rabbitmq-secret
