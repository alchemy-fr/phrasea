{{- if .Values.uploader.enabled }}
{{- if .Values.databox.enabled }}
{{- with .Values.databox }}
{{- $jobName := "create-databox-uploader-target" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $jobName }}-script
data:
  job.sh: |
    #!/bin/sh
    set -ex

    bin/console alchemy:oauth:create-client {{ .upload.uploaderTargetSlug | quote }} "Databox uploader" http://databox-api-nginx/incoming-uploads
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      volumes:
      - name: scripts
        configMap:
          name: {{ $jobName }}-script
          defaultMode: 0777
      containers:
      - name: {{ $jobName }}
        image: {{ $.Values.repository.baseurl }}/ps-uploader-api-php:{{ $.Values.repository.tag }}
        {{- if not (eq "latest" $.Values.repository.tag) }}
        imagePullPolicy: Always
        {{- end }}
        args: ["/setup/job.sh"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: scripts
          mountPath: /setup/job.sh
          subPath: job.sh
        env:
          - name: UPLOADER_TARGET_SLUG
            value: {{ .upload.uploaderTargetSlug | quote }}
        envFrom:
        - configMapRef:
            name: uploader-api-config
{{ include "configMapRef.phpApp" $tplArgs | indent 8 }}
{{- include "envFrom.rabbitmq" $ | indent 8 }}
{{- include "envFrom.postgresql" $ | indent 8 }}
      restartPolicy: Never
  backoffLimit: 0
{{- end }}
{{- end }}
{{- end }}
