$(function () {
    $('body')
        .on('change', '.perm input[type=checkbox]', function () {
            const $tr = $(this).closest('tr');

            syncToggle($tr);
            updateAce($tr);
        })
        .on('click', 'input[name=all]', function () {
            var $tr = $(this).closest('tr');
            $tr.find('.perm input').prop('checked', $(this).is(':checked'));
            updateAce($tr);
        })
        .on('click', '.delete', function () {
            var $tr = $(this).closest('tr');
            $tr.remove();
            deleteAce($tr.data('type'), $tr.data('id'));
        });

    $('#aces tr').each(function () {
        syncToggle($(this));
    });

    function syncToggle($tr) {
        let checkedCount = $tr.find('.perm input[type=checkbox]:checked').length;
        if (checkedCount === {{ permissions|length }}) {
            $tr.find('.all-toggle input').prop('checked', true);
        } else if (checkedCount === 0) {
            $tr.find('.all-toggle input').prop('checked', false);
        }
    }

    function updateAce($tr) {
        let mask = 0;
        $tr.find('td.perm input').each(function () {
            mask += $(this).is(':checked') ? parseInt($(this).val()) : 0;
        });
        setPermissions($tr.data('type'), $tr.data('id'), mask);
    }

    function isInList(id, type) {
        return $('#aces').find('tr[data-id=' + id + '][data-type=' + type + ']').length === 1;
    }

    function setPermissions(entityType, entityId, mask) {
        $.ajax({
            type: 'PUT',
            url: '{{ path('alchemy_acl_admin_ace') }}',
            data: {
                objectType: '{{ object_type }}',
                objectId: '{{ object_id }}',
                entityId: entityId,
                entityType: entityType,
                mask: mask
            }
        });
    }

    function deleteAce(entityType, entityId) {
        $.ajax({
            type: 'DELETE',
            url: '{{ path('alchemy_acl_admin_ace_delete') }}',
            data: {
                objectType: '{{ object_type }}',
                objectId: '{{ object_id }}',
                entityId: entityId,
                entityType: entityType
            }
        });
    }

    function initSelect($select, entityType) {
        $select
            .select2({
                width: '400px',
                placeholder: "Select " + entityType + " to grant...",
                templateResult: function (state) {
                    if (!state.id) {
                        return state.text;
                    }
                    const disabled = isInList(state.id, entityType);

                    return $(
                        '<span class="' + (disabled ? 'disabled ' : '') + state.element.className + '">' + state.text + '</span>'
                    );
                }
            })
            .on('select2:select', function (e) {
                const data = $(this).select2('data');
                const entityId = data[0].id;

                $(this).val(null).trigger('change');
                if (isInList(entityId, entityType)) {
                    return false;
                }

                var $row = $(this).closest('tr');

                setPermissions(entityType, entityId, 0);

                $('#aces tbody').prepend(
                    $('#row-template')
                        .html()
                        .replace(/\#ENTITYTYPE\#/g, entityType)
                        .replace(/\#ENTITYID\#/g, entityId)
                        .replace(/\#ENTITYNAME\#/g, data[0].text)
                );
            });
    }

    initSelect($('#user-select'), 'user');
    initSelect($('#group-select'), 'group');
});
