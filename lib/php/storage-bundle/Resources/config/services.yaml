parameters:
    env(S3_REGION): define-me
    env(S3_USE_PATH_STYLE_ENDPOINT): false
    env(S3_ACCESS_KEY): define-me
    env(S3_SECRET_KEY): define-me
    env(S3_REQUEST_SIGNATURE_TTL): '3600'
    env(S3_PATH_PREFIX): ''
    env(VERIFY_SSL): true
    env(ALLOWED_FILE_TYPES): ''

services:
    _defaults:
        autowire: true
        autoconfigure: true

    alchemy_storage.s3_client:
        class: Aws\S3\S3Client
        arguments:
            -
                version: 'latest'
                region: '%env(default::S3_REGION)%'
                use_path_style_endpoint: '%env(bool:S3_USE_PATH_STYLE_ENDPOINT)%'
                bucket: '%env(default::S3_BUCKET_NAME)%'
                endpoint: '%env(default::S3_ENDPOINT)%'
                credentials:
                    key: '%env(S3_ACCESS_KEY)%'
                    secret: '%env(S3_SECRET_KEY)%'
                http:
                    verify: '%env(bool:VERIFY_SSL)%'

    Alchemy\StorageBundle\Upload\UploadManager:
        arguments:
            $client: '@alchemy_storage.s3_client'
            $uploadBucket: '%env(S3_BUCKET_NAME)%'
            $pathPrefix: '%env(S3_PATH_PREFIX)%'

    Alchemy\StorageBundle\Command\PruneMultipartUploadsCommand:
        tags:
            - { name: console.command }

    Alchemy\StorageBundle\Controller\MultipartUploadPartAction:
        tags:
            - { name: controller.service_arguments }

    Alchemy\StorageBundle\Doctrine\MultipartUploadListener:
        tags:
            - { name: doctrine.event_subscriber }

    Alchemy\StorageBundle\Storage\PathGenerator: ~

    Alchemy\StorageBundle\Storage\FileStorageManager:
        arguments:
            $filesystem: "@oneup_flysystem.upload_filesystem"

    Alchemy\StorageBundle\Storage\UrlSigner:
        $client: '@alchemy_storage.s3_client'
        $bucketName: '%env(S3_BUCKET_NAME)%'
        $ttl: '%env(int:S3_REQUEST_SIGNATURE_TTL)%'
        $pathPrefix: '%env(S3_PATH_PREFIX)%'

    Alchemy\StorageBundle\Upload\FileValidator:
        $allowedTypes: '%alchemy_storage.upload.allowed_types%'
