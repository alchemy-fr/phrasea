parameters:
  env(VERIFY_SSL): true
  env(KEYCLOAK_REALM): master

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  alchemy.keycloak_client:
    class: GuzzleHttp\Client
    arguments:
    -
      verify: '%env(bool:VERIFY_SSL)%'
      options:
        timeout: 10
        http_errors: false
        headers:
          Accept: "application/json"


  Alchemy\RemoteAuthBundle\Client\AuthServiceClient:
    arguments:
      $client: "@alchemy.keycloak_client"

  Alchemy\RemoteAuthBundle\Security\Firewall\RemoteAuthListener: ~

  Alchemy\RemoteAuthBundle\Security\RemoteUserProvider: ~
  Alchemy\RemoteAuthBundle\Security\RemoteAuthAuthenticatorPersister: ~
  Alchemy\RemoteAuthBundle\Security\AccessTokenAuthenticator: ~
  Alchemy\RemoteAuthBundle\Security\AppAuthenticator: ~
  Alchemy\RemoteAuthBundle\Client\AdminClient: ~
  Alchemy\RemoteAuthBundle\Http\AuthStateEncoder: ~
  Alchemy\RemoteAuthBundle\Repository\AbstractRemoteAuthRepository: ~
  Alchemy\RemoteAuthBundle\Repository\RemoteAuthUserRepository: ~
  Alchemy\RemoteAuthBundle\Repository\RemoteAuthGroupRepository: ~
  Alchemy\RemoteAuthBundle\Repository\UserRepositoryInterface: "@Alchemy\\RemoteAuthBundle\\Repository\\RemoteAuthUserRepository"
  Alchemy\RemoteAuthBundle\Repository\GroupRepositoryInterface: "@Alchemy\\RemoteAuthBundle\\Repository\\RemoteAuthGroupRepository"
  Alchemy\RemoteAuthBundle\Listener\LogoutListener: ~
  Alchemy\RemoteAuthBundle\Client\KeycloakUrlGenerator: ~
