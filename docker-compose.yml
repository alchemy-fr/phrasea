version: '3.9'

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: ${PS_SUBNET}

services:
  traefik:
    image: traefik:v2.5.5
    networks:
      - internal
    ports:
      - ${TRAEFIK_PORT}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infra/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./infra/traefik/dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml:ro
      - ./infra/certs:/etc/traefik/certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-console.rule=Host(`traefik-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.traefik-console.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik-console.tls=true"

  uploader-api-php:
    profiles:
      - uploader
    image: ${REGISTRY_NAMESPACE}uploader-api-php:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-api-php
    networks:
      internal:
        aliases:
          - uploader-api-php
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - TRUSTED_PROXIES
      - VERIFY_SSL
      - APP_ID=uploader
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - UPLOADER_API_BASE_URL=https://api-uploader.${PHRASEA_DOMAIN}
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - ADMIN_CLIENT_ID=${UPLOADER_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${UPLOADER_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${UPLOADER_ADMIN_CLIENT_SECRET}
      - REPORT_API_BASE_URL
      - UPLOAD_MAX_FILE_SIZE
      - UPLOADER_REQUEST_SIGNATURE_TTL
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${UPLOADER_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${UPLOADER_STORAGE_BUCKET_NAME}
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_BASE_URL=https://dashboard.${PHRASEA_DOMAIN}
      - DELETE_ASSET_GRACEFUL_TIME=${UPLOADER_DELETE_ASSET_GRACEFUL_TIME}
    volumes:
      - uploader_vol:/var/data/upload
      - ./configs:/configs
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  uploader-worker:
    profiles:
      - uploader
    image: ${REGISTRY_NAMESPACE}uploader-worker:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - APP_ID=uploader
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - UPLOADER_API_BASE_URL=https://api-uploader.${PHRASEA_DOMAIN}
      - REPORT_API_BASE_URL
      - UPLOADER_REQUEST_SIGNATURE_TTL
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${UPLOADER_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${UPLOADER_STORAGE_BUCKET_NAME}
      - DELETE_ASSET_GRACEFUL_TIME=${UPLOADER_DELETE_ASSET_GRACEFUL_TIME}
    volumes:
      - uploader_vol:/var/data/upload
      - ./configs:/configs

  uploader-api-nginx:
    profiles:
      - uploader
    image: ${REGISTRY_NAMESPACE}uploader-api-nginx:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-api-nginx
    environment:
      - UPLOAD_MAX_FILE_SIZE
    networks:
      internal:
        aliases:
          - uploader-api
    depends_on:
      - uploader-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uploader-api.rule=Host(`api-uploader.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.uploader-api.tls=true"

  auth-worker:
    profiles:
      - auth
      - databox
      - expose
      - notify
      - uploader
    image: ${REGISTRY_NAMESPACE}auth-worker:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    volumes:
      - ./configs:/configs
    environment:
      - APP_ENV
      - APP_ID=auth
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - REPORT_API_BASE_URL

  auth-api-php:
    profiles:
      - auth
      - databox
      - expose
      - notify
      - uploader
    image: ${REGISTRY_NAMESPACE}auth-api-php:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-api-php
    networks:
      internal:
        aliases:
          - auth-api-php
    environment:
      - APP_ENV
      - TRUSTED_PROXIES
      - VERIFY_SSL
      - APP_ID=auth
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - ADMIN_CLIENT_ID=${AUTH_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${AUTH_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${AUTH_ADMIN_CLIENT_SECRET}
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - REPORT_API_BASE_URL
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_BASE_URL=https://dashboard.${PHRASEA_DOMAIN}
    volumes:
      - ./configs:/configs
    depends_on:
      - redis
      - rabbitmq
      - db
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  auth-api-nginx:
    profiles:
      - auth
      - databox
      - expose
      - notify
      - uploader
    image: ${REGISTRY_NAMESPACE}auth-api-nginx:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-api-nginx
    networks:
      internal:
        aliases:
          - auth-api
    depends_on:
      - auth-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`api-auth.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.auth-api.tls=true"

  expose-api-php:
    profiles:
      - expose
    image: ${REGISTRY_NAMESPACE}expose-api-php:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-api-php
    networks:
      internal:
        aliases:
          - expose-api-php
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - DEV_MODE
      - TRUSTED_PROXIES
      - VERIFY_SSL
      - APP_ID=expose
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - EXPOSE_REQUEST_SIGNATURE_TTL
      - ADMIN_CLIENT_ID=${EXPOSE_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${EXPOSE_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${EXPOSE_ADMIN_CLIENT_SECRET}
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${EXPOSE_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - REPORT_API_BASE_URL
      - EXPOSE_API_BASE_URL=https://api-expose.${PHRASEA_DOMAIN}
      - EXPOSE_CLIENT_BASE_URL=https://expose.${PHRASEA_DOMAIN}
      - UPLOAD_MAX_FILE_SIZE
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_BASE_URL=https://dashboard.${PHRASEA_DOMAIN}
      - ZIPPY_CLIENT_ID
      - ZIPPY_CLIENT_SECRET
      - ZIPPY_BASE_URL
      - SIDEBAR_DEFAULT_OPEN=${EXPOSE_SIDEBAR_DEFAULT_OPEN}
      - MAPBOX_TOKEN
      - EXPOSE_CLIENT_LOGO_URL
      - EXPOSE_CLIENT_LOGO_ALT
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - zippy-svc.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  expose-worker:
    profiles:
      - expose
    image: ${REGISTRY_NAMESPACE}expose-worker:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-worker
    networks:
      - internal
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - APP_ID=expose
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${EXPOSE_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - EXPOSE_REQUEST_SIGNATURE_TTL
      - REPORT_API_BASE_URL
      - EXPOSE_API_BASE_URL=https://api-expose.${PHRASEA_DOMAIN}
      - UPLOAD_MAX_FILE_SIZE
    extra_hosts:
      - zippy-svc.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  expose-api-nginx:
    profiles:
      - expose
    image: ${REGISTRY_NAMESPACE}expose-api-nginx:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-api-nginx
    networks:
      internal:
        aliases:
          - expose_api
    depends_on:
      - expose-api-php
    environment:
      - UPLOAD_MAX_FILE_SIZE
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.expose-api.rule=Host(`api-expose.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.expose-api.tls=true"

  notify-api-php:
    profiles:
      - notify
    image: ${REGISTRY_NAMESPACE}notify-api-php:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-api-php
    networks:
      internal:
        aliases:
          - notify-api-php
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
    environment:
      - APP_ENV
      - TRUSTED_PROXIES
      - VERIFY_SSL
      - APP_ID=notify
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - ADMIN_CLIENT_ID=${NOTIFY_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${NOTIFY_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${NOTIFY_ADMIN_CLIENT_SECRET}
      - REPORT_API_BASE_URL
      - MAILER_DSN
      - MAIL_FROM
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_BASE_URL=https://dashboard.${PHRASEA_DOMAIN}
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  notify-worker:
    profiles:
      - notify
    image: ${REGISTRY_NAMESPACE}notify-worker:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
    volumes:
      - ./configs:/configs
    environment:
      - APP_ENV
      - APP_ID=notify
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - REPORT_API_BASE_URL
      - MAILER_DSN
      - MAIL_FROM

  notify-api-nginx:
    profiles:
      - notify
    image: ${REGISTRY_NAMESPACE}notify-api-nginx:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-api-nginx
    networks:
      internal:
        aliases:
          - notify-api
    depends_on:
      - notify-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notify-api.rule=Host(`api-notify.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.notify-api.tls=true"

  redis:
    profiles:
      - db
    image: redis:5.0.5-alpine
    networks:
      - internal
    volumes:
      - redis_vol:/data

  db:
    profiles:
      - db
    image: postgres:11.2-alpine
    hostname: postgres
    networks:
      - internal
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db_vol:/var/lib/postgresql/data

  rabbitmq:
    profiles:
      - db
    image: rabbitmq:3.7.14-management
    hostname: rabbitmq
    networks:
      - internal
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_vol:/var/lib/rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq-console.rule=Host(`rabbitmq-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.rabbitmq-console.tls=true"
      - "traefik.http.services.rabbitmq-console.loadbalancer.server.port=15672"

  dockerize:
    profiles:
      - setup
    image: jwilder/dockerize
    networks:
      - internal
    command:
      - "dockerize"
      - "-wait"
      - "tcp://db:5432"
      - "-wait"
      - "tcp://rabbitmq:5672"
      - "-wait"
      - "http://elasticsearch:9200"
      - "-wait"
      - "tcp://minio:9000"
      - "-timeout"
      - "100s"
      - "--"
      - "echo"
      - "ready"

  minio:
    profiles:
      - db
    image: minio/minio:RELEASE.2021-11-24T23-19-33Z.hotfix.1d85a4563
    networks:
      - internal
    command: server /data --console-address ":9001"
    volumes:
      - s3_vol:/data
    environment:
      - MINIO_ROOT_USER=${S3_STORAGE_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_STORAGE_SECRET_KEY}
      - MINIO_BROWSER_REDIRECT_URL=https://minio-console.${PHRASEA_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  minio-mc:
    profiles:
      - setup
    image: minio/mc:RELEASE.2020-09-18T00-13-21Z
    networks:
      - internal
    command: exit 0
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}
      EXPOSE_STORAGE_BUCKET_NAME: ${EXPOSE_STORAGE_BUCKET_NAME}
      UPLOADER_STORAGE_BUCKET_NAME: ${UPLOADER_STORAGE_BUCKET_NAME}
      DATABOX_STORAGE_BUCKET_NAME: ${DATABOX_STORAGE_BUCKET_NAME}

  matomo-php:
    profiles:
      - matomo
    image: ${REGISTRY_NAMESPACE}matomo-php:$DOCKER_TAG
    build: ./infra/docker/matomo-php
    networks:
      internal:
        aliases:
          - matomo-php
    depends_on:
      - matomo-db
    environment:
      - MATOMO_DATABASE_HOST=matomo-db
      - MATOMO_DATABASE_USERNAME
      - MATOMO_DATABASE_PASSWORD
      - MATOMO_DATABASE_DBNAME
    volumes:
      - matomo_vol:/var/www/html

  matomo-nginx:
    profiles:
      - matomo
    image: ${REGISTRY_NAMESPACE}matomo-nginx:$DOCKER_TAG
    build: ./infra/docker/matomo-nginx
    networks:
      - internal
    depends_on:
      - matomo-php
    volumes:
      - matomo_vol:/var/www/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matomo.rule=Host(`matomo.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.matomo.tls=true"

  matomo-db:
    profiles:
      - matomo
    image: mariadb:10.4.10-bionic
    command:
      - "mysqld"
      - "--max_allowed_packet=64MB"
    networks:
      internal:
        aliases:
          - matomo-db
    environment:
      - MYSQL_ROOT_PASSWORD=$MATOMO_MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MATOMO_DATABASE_DBNAME
      - MYSQL_USER=$MATOMO_DATABASE_USERNAME
      - MYSQL_PASSWORD=$MATOMO_DATABASE_PASSWORD
    volumes:
      - matomodb_vol:/var/lib/mysql

  report-api:
    profiles:
      - report
    image: ${REGISTRY_NAMESPACE}report-api:$DOCKER_TAG
    build: report
    networks:
      internal:
        aliases:
          - report-api
    environment:
      - APP_ENV
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${REPORT_DB_NAME}

  pgadmin:
    profiles:
      - tools
    image: dpage/pgadmin4:4.14
    networks:
      - internal
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    depends_on:
      - db
    volumes:
      - pgadmin_vol:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.pgadmin.tls=true"

  phpmyadmin:
    profiles:
      - tools
    image: phpmyadmin/phpmyadmin
    networks:
      - internal
    environment:
      - PMA_HOST=matomo-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`pma.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.phpmyadmin.tls=true"

  mailhog:
    profiles:
      - mailhog
    image: mailhog/mailhog
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.mailhog.tls=true"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  weblate:
    image: weblate/weblate:4.9.1-1
    profiles:
      - weblate
    volumes:
      - weblate_vol:/app/data
    networks:
      - internal
    depends_on:
      - db
      - redis
    environment:
      - WEBLATE_EMAIL_HOST
      - WEBLATE_EMAIL_PORT
      - WEBLATE_EMAIL_HOST_USER
      - WEBLATE_EMAIL_HOST_PASSWORD
      - WEBLATE_ALLOWED_HOSTS=weblate.${PHRASEA_DOMAIN}
      - WEBLATE_ADMIN_PASSWORD
      - WEBLATE_EMAIL_USE_TLS=0
      - WEBLATE_EMAIL_USE_SSL=0
      - WEBLATE_ADMIN_EMAIL
      - WEBLATE_ADMIN_NAME
      - WEBLATE_SERVER_EMAIL=$WEBLATE_SERVER_EMAIL
      - WEBLATE_DEFAULT_FROM_EMAIL=weblate@example.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEBLATE_SITE_DOMAIN=weblate.${PHRASEA_DOMAIN}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${WEBLATE_POSTGRES_DB}
      - POSTGRES_HOST
      - POSTGRES_PORT
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.weblate.rule=Host(`weblate.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.weblate.tls=true"

  dashboard:
    profiles:
      - dashboard
    image: ${REGISTRY_NAMESPACE}dashboard:$DOCKER_TAG
    build: dashboard
    networks:
      - internal
    environment:
      - APP_ENV
      - ASSET_CONSUMER_ACCESS_TOKEN
      - ASSET_CONSUMER_COMMIT_URI
      - AUTH_PORT
      - AUTH_REGISTRATION_VALIDATE_EMAIL
      - COMPOSE_PROJECT_NAME
      - DEV_MODE
      - DOCKER_TAG
      - EXPOSE_API_PORT
      - EXPOSE_CLIENT_PORT
      - EXPOSE_STORAGE_BUCKET_NAME
      - IDE_KEY
      - MAILER_DSN
      - MAILHOG_PORT
      - MATOMO_DATABASE_DBNAME
      - MATOMO_HOST
      - MATOMO_MYSQL_ROOT_PASSWORD
      - MATOMO_PORT
      - MINIO_PORT
      - NOTIFY_PORT
      - PGADMIN_PORT
      - PHPMYADMIN_PORT
      - PS_DEBUG_SERVER_NAME_PREFIX
      - PS_GATEWAY_IP
      - PS_SUBNET
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - REGISTRY_NAMESPACE
      - REPORT_DB_NAME
      - UPLOADER_API_PORT
      - WEBLATE_ADMIN_EMAIL
      - WEBLATE_ADMIN_NAME
      - WEBLATE_ADMIN_PASSWORD
      - WEBLATE_ALLOWED_HOSTS
      - WEBLATE_EMAIL_HOST
      - WEBLATE_EMAIL_PORT
      - WEBLATE_PORT
      - WEBLATE_POSTGRES_DB
      - WEBLATE_SERVER_EMAIL
      - XDEBUG_ENABLED
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.dashboard.tls=true"

  databox-api-php:
    profiles:
      - databox
    image: ${REGISTRY_NAMESPACE}databox-api-php:$DOCKER_TAG
    build:
      context: ./databox/api
      target: databox-api-php
    networks:
      internal:
        aliases:
          - databox-php
    environment:
      - APP_ENV
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - TRUSTED_PROXIES=${PS_SUBNET}
      - VERIFY_SSL
      - DATABOX_API_BASE_URL=https://api-databox.${PHRASEA_DOMAIN}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - ADMIN_CLIENT_ID=${DATABOX_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${DATABOX_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${DATABOX_ADMIN_CLIENT_SECRET}
      - ELASTICSEARCH_URL
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${DATABOX_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${DATABOX_STORAGE_BUCKET_NAME}
      - DATABOX_REQUEST_SIGNATURE_TTL
      - PHRASEANET_BASE_URL
      - PHRASEANET_APP_OAUTH_TOKEN
      - UPLOAD_MAX_FILE_SIZE
    depends_on:
      - rabbitmq
      - redis
      - db
      - elasticsearch
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-uploader.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - phraseanet.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  databox-worker:
    profiles:
      - databox
    image: ${REGISTRY_NAMESPACE}databox-worker:$DOCKER_TAG
    build:
      context: ./databox/api
      target: databox-worker
    networks:
      - internal
    depends_on:
      - redis
      - rabbitmq
      - db
      - elasticsearch
    environment:
      - APP_ENV
      - AUTH_API_BASE_URL=https://api-auth.${PHRASEA_DOMAIN}
      - DATABOX_API_BASE_URL=https://api-databox.${PHRASEA_DOMAIN}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - VERIFY_SSL
      - ADMIN_CLIENT_ID=${DATABOX_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_RANDOM_ID=${DATABOX_ADMIN_CLIENT_RANDOM_ID}
      - ADMIN_CLIENT_SECRET=${DATABOX_ADMIN_CLIENT_SECRET}
      - ELASTICSEARCH_URL
      - S3_STORAGE_ENDPOINT=https://minio.${PHRASEA_DOMAIN}
      - S3_STORAGE_USE_PATH_STYLE_ENDPOINT=${DATABOX_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - S3_STORAGE_REGION
      - S3_STORAGE_BUCKET_NAME=${DATABOX_STORAGE_BUCKET_NAME}
      - DATABOX_REQUEST_SIGNATURE_TTL
      - PHRASEANET_BASE_URL
      - PHRASEANET_APP_OAUTH_TOKEN
    extra_hosts:
      - api-auth.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-uploader.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - phraseanet.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  databox-api-nginx:
    profiles:
      - databox
    image: ${REGISTRY_NAMESPACE}databox-api-nginx:$DOCKER_TAG
    build:
      context: ./databox/api
      target: databox-api-nginx
    networks:
      internal:
        aliases:
          - databox-api
    environment:
      - UPLOAD_MAX_FILE_SIZE
    depends_on:
      - databox-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.databox-api.rule=Host(`api-databox.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.databox-api.tls=true"

  indexer-app:
    build:
      context: ./indexer/desktop-app
    profiles:
      - app-indexer
    privileged: true

  indexer-agent-amqp:
    image: ${REGISTRY_NAMESPACE}indexer-agent-amqp:$DOCKER_TAG
    build:
      context: ./indexer/agent-amqp
    profiles:
      - indexer
    networks:
      - internal
    depends_on:
      - rabbitmq
    environment:
      - AMQP_DSN=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/s3events
      - DATABOX_API_URL=https://api-databox.${PHRASEA_DOMAIN}
      - DATABOX_CLIENT_ID=indexer_3x0hjx
      - DATABOX_CLIENT_SECRET=1wq6n8w0mdlww0gg880w4g8ogk8ssk8sgk0k0s840og88cs88c
      - PUBLIC_URL=https://indexer-agent-amqp.${PHRASEA_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.indexer-agent-amqp.rule=Host(`indexer-agent-amqp.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.indexer-agent-amqp.tls=true"

  elasticsearch:
    profiles:
      - databox
    image: elasticsearch:7.11.2
    networks:
      - internal
    volumes:
      - elasticsearch_vol:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

volumes:
  db_vol:
  redis_vol:
  uploader_vol: # rw-many
  s3_vol:
  matomo_vol:
  matomodb_vol:
  pgadmin_vol:
  rabbitmq_vol:
  elasticsearch_vol:
  weblate_vol:
