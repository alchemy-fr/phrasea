version: '3.4'

networks:
  internal:

services:
  uploader-api-php:
    image: ${REGISTRY_NAMESPACE}uploader-api-php:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-api-php
    networks:
      internal:
        aliases:
          - uploader-api-php
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - UPLOADER_BASE_URL
      - UPLOAD_TEMP_DIR=/var/data/upload
      - AUTH_BASE_URL
      - AUTH_CLIENT_ID=${ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${ADMIN_CLIENT_SECRET}
      - REPORT_BASE_URL
    volumes:
      - uploader_vol:/var/data/upload
      - ./configs:/configs

  uploader-worker:
    image: ${REGISTRY_NAMESPACE}uploader-worker:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - UPLOADER_BASE_URL
      - UPLOAD_TEMP_DIR=/var/data/upload
    volumes:
      - uploader_vol:/var/data/upload

  uploader-api-nginx:
    image: ${REGISTRY_NAMESPACE}uploader-api-nginx:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader-api-nginx
    networks:
      - internal
    ports:
      - ${UPLOADER_API_PORT}:80
    depends_on:
      - uploader-api-php

  uploader-client:
    image: ${REGISTRY_NAMESPACE}uploader-client:$DOCKER_TAG
    build:
      context: ./uploader/client
      target: uploader-client_nginx
    volumes:
      - ./configs:/configs
    ports:
      - ${UPLOADER_CLIENT_PORT}:80
    networks:
      - internal
    environment:
      - DEV_MODE
      - UPLOADER_BASE_URL
      - AUTH_BASE_URL
      - CLIENT_ID=${UPLOADER_CLIENT_ID}_${UPLOADER_CLIENT_RANDOM_ID}
      - CLIENT_SECRET=${UPLOADER_CLIENT_SECRET}

  auth-worker:
    image: ${REGISTRY_NAMESPACE}auth-worker:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    volumes:
      - ./configs:/configs
    environment:
      - APP_ENV
      - AUTH_BASE_URL
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

  auth-api-php:
    image: ${REGISTRY_NAMESPACE}auth-api-php:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-api-php
    networks:
      internal:
        aliases:
          - auth-api-php
    environment:
      - APP_ENV
      - AUTH_BASE_URL
      - AUTH_CLIENT_ID=${ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${ADMIN_CLIENT_SECRET}
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - MAILER_URL
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./configs:/configs
    depends_on:
      - redis
      - rabbitmq
      - db

  auth-api-nginx:
    image: ${REGISTRY_NAMESPACE}auth-api-nginx:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth-api-nginx
    networks:
      internal:
        aliases:
          - auth_api
    ports:
      - ${AUTH_PORT}:80
    depends_on:
      - auth-api-php

  redis:
    image: redis:5.0.5-alpine
    networks:
      - internal
    volumes:
      - redis_vol:/data

  db:
    image: postgres:11.2-alpine
    hostname: postgres
    networks:
      - internal
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db_vol:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.7.14-management
    networks:
      - internal
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    ports:
      - ${RABBITMQ_MGT_PORT}:15672

  dockerize:
    image: jwilder/dockerize
    networks:
      - internal
    command: ["dockerize", "-wait", "tcp://db:5432", "-wait", "tcp://rabbitmq:5672", "-timeout", "50s", "--", "echo", "ready"]

  expose-api-php:
    image: ${REGISTRY_NAMESPACE}expose-api-php:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-api-php
    networks:
      internal:
        aliases:
          - expose-api-php
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - AUTH_BASE_URL
      - AUTH_CLIENT_ID=${ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${ADMIN_CLIENT_SECRET}
      - STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY
      - REPORT_BASE_URL

  expose-worker:
    image: ${REGISTRY_NAMESPACE}expose-worker:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-worker
    networks:
      - internal
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY

  expose-api-nginx:
    image: ${REGISTRY_NAMESPACE}expose-api-nginx:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose-api-nginx
    networks:
      internal:
        aliases:
          - expose_api
    ports:
      - ${EXPOSE_API_PORT}:80
    depends_on:
      - expose-api-php

  expose-front:
    image: ${REGISTRY_NAMESPACE}expose-front:$DOCKER_TAG
    build:
      context: ./expose/front
      target: expose-front_nginx
    volumes:
      - ./configs:/configs
    ports:
      - ${EXPOSE_FRONT_PORT}:80
    networks:
      - internal
    environment:
      - DEV_MODE
      - EXPOSE_BASE_URL
      - AUTH_BASE_URL
      - CLIENT_ID=${EXPOSE_CLIENT_ID}_${EXPOSE_CLIENT_RANDOM_ID}
      - CLIENT_SECRET=${EXPOSE_CLIENT_SECRET}
      - MATOMO_HOST

  notify-api-php:
    image: ${REGISTRY_NAMESPACE}notify-api-php:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-api-php
    networks:
      internal:
        aliases:
          - notify-api-php
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - AUTH_BASE_URL
      - AUTH_CLIENT_ID=${ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${ADMIN_CLIENT_SECRET}

  notify-worker:
    image: ${REGISTRY_NAMESPACE}notify-worker:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-worker
    networks:
      - internal
    depends_on:
      - rabbitmq
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

  notify-api-nginx:
    image: ${REGISTRY_NAMESPACE}notify-api-nginx:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify-api-nginx
    networks:
      internal:
        aliases:
          - notify-api
    ports:
      - ${NOTIFY_PORT}:80
    depends_on:
      - notify-api-php

  minio:
    image: minio/minio
    networks:
      - internal
    command: server /data
    volumes:
      - s3_vol:/data
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}

  minio-mc:
    image: minio/mc
    networks:
      - internal
    command: exit 0
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}

  matomo-php:
    image: ${REGISTRY_NAMESPACE}matomo-php:$DOCKER_TAG
    build: ./infra/docker/matomo-php
    networks:
      internal:
        aliases:
          - matomo-php
    depends_on:
      - matomo-db
    environment:
      - MATOMO_DATABASE_HOST=matomo-db
      - MATOMO_DATABASE_USERNAME
      - MATOMO_DATABASE_PASSWORD
      - MATOMO_DATABASE_DBNAME
    volumes:
      - matomo_vol:/var/www/html

  matomo-nginx:
    image: ${REGISTRY_NAMESPACE}matomo-nginx:$DOCKER_TAG
    build: ./infra/docker/matomo-nginx
    networks:
      - internal
    depends_on:
      - matomo-php
    volumes:
      - matomo_vol:/var/www/html:ro
    ports:
      - ${MATOMO_PORT}:80

  matomo-db:
    image: mariadb:10.4.10-bionic
    command:
      - "mysqld"
      - "--max_allowed_packet=64MB"
    networks:
      internal:
        aliases:
          - matomo-db
    environment:
      - MYSQL_ROOT_PASSWORD=$MATOMO_MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MATOMO_DATABASE_DBNAME
      - MYSQL_USER=$MATOMO_DATABASE_USERNAME
      - MYSQL_PASSWORD=$MATOMO_DATABASE_PASSWORD
    volumes:
      - mariadb_vol:/var/lib/mysql

  weblate:
    image: weblate/weblate:3.8-4
    volumes:
      - weblate_vol:/app/data
    networks:
      - internal
    ports:
      - ${WEBLATE_PORT}:8080
    depends_on:
      - db
      - redis
    environment:
      - WEBLATE_EMAIL_HOST
      - WEBLATE_EMAIL_PORT
      - WEBLATE_EMAIL_HOST_USER
      - WEBLATE_EMAIL_HOST_PASSWORD
      - WEBLATE_ALLOWED_HOSTS
      - WEBLATE_ADMIN_PASSWORD
      - WEBLATE_EMAIL_USE_TLS=0
      - WEBLATE_EMAIL_USE_SSL=0
      - WEBLATE_ADMIN_EMAIL
      - WEBLATE_ADMIN_NAME
      - WEBLATE_SERVER_EMAIL=$WEBLATE_SERVER_EMAIL
      - WEBLATE_DEFAULT_FROM_EMAIL=weblate@example.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${WEBLATE_POSTGRES_DB}
      - POSTGRES_HOST=db

  report-api:
    image: ${REGISTRY_NAMESPACE}report-api:$DOCKER_TAG
    build: report
    networks:
      internal:
        aliases:
          - report-api
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${REPORT_DB_NAME}

volumes:
  weblate_vol:
  db_vol:
  redis_vol:
  uploader_vol: # rw-many
  s3_vol:
  matomo_vol:
  mariadb_vol:
