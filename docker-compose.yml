networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: ${PS_SUBNET}

services:
  traefik:
    image: traefik:v2.5.5
    networks:
      - internal
    ports:
      - ${TRAEFIK_HTTPS_PORT}:443
      - ${TRAEFIK_HTTP_PORT}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infra/traefik/dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml:ro
      - ./infra/traefik/letsencrypt:/etc/traefik/letsencrypt
      - ./infra/certs:/etc/traefik/certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.traefik-console.rule=Host(`traefik-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.traefik-console.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.admin-secured.basicauth.realm=Secured"
      - "traefik.http.middlewares.admin-secured.basicauth.users=${ADMIN_BASIC_AUTH_USER}"
      - "traefik.http.routers.traefik-console.middlewares=admin-secured@docker"
    environment:
      - TRAEFIK_API=true
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_ACCESSLOG=true
      - TRAEFIK_LOG_LEVEL=DEBUG
      - TRAEFIK_LOG_FORMAT=common
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_PROVIDERS_DOCKER_CONSTRAINTS=Label(`traefik.project_name`,`${COMPOSE_PROJECT_NAME}`)
      - TRAEFIK_ENTRYPOINTS_WEB=true
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO=websecure
      - TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME=https
      - TRAEFIK_ENTRYPOINTS_WEBSECURE=true
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS=true
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_CERTRESOLVER=letsencrypt
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_DOMAINS_0_MAIN=${PHRASEA_DOMAIN}
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_DOMAINS_0_SANS=*.${PHRASEA_DOMAIN}
      - TRAEFIK_PROVIDERS_FILE_FILENAME
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT=${LETS_ENCRYPT_ENABLED}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${LETS_ENCRYPT_CONTACT_EMAIL}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_PROVIDER=${LETS_ENCRYPT_PROVIDER}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER=${LETS_ENCRYPT_CA_SERVER}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_DELAYBEFORECHECK=10
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE=/etc/traefik/letsencrypt/acme.json
      - GANDIV5_API_KEY=${LEGO_GANDIV5_API_KEY}
      - OVH_ENDPOINT=${LEGO_OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${LEGO_OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${LEGO_OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${LEGO_OVH_CONSUMER_KEY}
      - AWS_ACCESS_KEY_ID=${LEGO_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${LEGO_AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${LEGO_AWS_REGION}
      - AWS_HOSTED_ZONE_ID=${LEGO_AWS_HOSTED_ZONE_ID}
      - AWS_ASSUME_ROLE_ARN=${LEGO_AWS_ASSUME_ROLE_ARN}
      - AWS_PROFILE=${LEGO_AWS_PROFILE}
      - AWS_SDK_LOAD_CONFIG=${LEGO_AWS_SDK_LOAD_CONFIG}

  a_client:
    profiles:
      - none
    build:
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
        SENTRY_RELEASE: ${SENTRY_RELEASE}
    networks:
      - internal
    environment:
      - DEV_MODE
      - KEYCLOAK_URL
      - KEYCLOAK_REALM_NAME
      - MATOMO_HOST
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_CLIENT_URL
      - AUTO_CONNECT_IDP
      - MATOMO_URL
      - SENTRY_DSN=${CLIENT_SENTRY_DSN}
      - SENTRY_ENVIRONMENT
    volumes:
      - ./configs:/configs
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
    extra_hosts:
      - soketi.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  a_api-php:
    profiles:
      - none
    build:
      target: api-php
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
        SENTRY_RELEASE: ${SENTRY_RELEASE}
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - TRUSTED_PROXIES
      - VERIFY_SSL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_SSL
      - REPORT_API_URL
      - DISPLAY_SERVICES_MENU
      - DASHBOARD_CLIENT_URL
      - NEWRELIC_ENABLED
      - NEWRELIC_LICENSE_KEY
      - SENTRY_DSN=${PHP_SENTRY_DSN}
      - SENTRY_ENVIRONMENT
      - KEYCLOAK_URL
      - KEYCLOAK_REALM_NAME
      - CONFIGURATOR_DB_NAME
      - CONFIGURATOR_STORAGE_BUCKET_NAME
      - CONFIGURATOR_STORAGE_USE_PATH_STYLE_ENDPOINT
    extra_hosts:
      - keycloak.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
    volumes:
      - ./configs:/configs

  a_s3-php:
    extends:
      service: a_api-php
    profiles:
      - none
    environment:
      - S3_ENDPOINT
      - S3_PATH_PREFIX
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_REGION
    extra_hosts:
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  uploader-api-php:
    extends:
      service: a_s3-php
    profiles:
      - uploader
    image: ${REGISTRY_NAMESPACE}uploader-api-php:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./uploader/api/Dockerfile
    environment:
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - RABBITMQ_VHOST=${UPLOADER_RABBITMQ_VHOST}
      - UPLOADER_API_URL
      - ADMIN_CLIENT_ID=${UPLOADER_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_SECRET=${UPLOADER_ADMIN_CLIENT_SECRET}
      - UPLOAD_MAX_FILE_SIZE
      - S3_REQUEST_SIGNATURE_TTL=${UPLOADER_REQUEST_SIGNATURE_TTL}
      - S3_USE_PATH_STYLE_ENDPOINT=${UPLOADER_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_BUCKET_NAME=${UPLOADER_STORAGE_BUCKET_NAME}
      - DELETE_ASSET_GRACEFUL_TIME=${UPLOADER_DELETE_ASSET_GRACEFUL_TIME}
      - NEWRELIC_APP_NAME=uploader-api
      - ALLOWED_FILE_TYPES=${UPLOADER_ALLOWED_FILE_TYPES}
    volumes:
      - uploader:/var/data/upload
    extra_hosts:
      - ${PHRASEANET_DOMAIN}:${PS_GATEWAY_IP}
      - api-databox.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  uploader-worker:
    extends:
      service: uploader-api-php
    image: ${REGISTRY_NAMESPACE}uploader-worker:${DOCKER_TAG}
    build:
      target: worker
    deploy:
      replicas: $UPLOADER_WORKER_REPLICAS

  uploader-api-nginx:
    profiles:
      - uploader
    image: ${REGISTRY_NAMESPACE}uploader-api-nginx:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./uploader/api/Dockerfile
      target: api-nginx
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
    environment:
      - UPLOAD_MAX_FILE_SIZE
    networks:
      internal:
        aliases:
          - uploader-api
    depends_on:
      - uploader-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.uploader-api.rule=Host(`api-uploader.${PHRASEA_DOMAIN}`)"

  databox-client:
    extends:
      service: a_client
    image: ${REGISTRY_NAMESPACE}databox-client:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./databox/client/Dockerfile
    profiles:
      - databox
    environment:
      - S3_REQUEST_SIGNATURE_TTL=${DATABOX_REQUEST_SIGNATURE_TTL}
      - DATABOX_API_URL
      - UPLOADER_API_URL
      - CLIENT_ID=${DATABOX_CLIENT_ID}
      - UPLOADER_TARGET_SLUG=${DATABOX_UPLOADER_TARGET_SLUG}
      - ALLOWED_FILE_TYPES=${UPLOADER_ALLOWED_FILE_TYPES}
      - SOKETI_KEY
      - SOKETI_HOST=soketi.${PHRASEA_DOMAIN}
    labels:
      - "traefik.http.routers.databox-client-dev.rule=Host(`databox.${PHRASEA_DOMAIN}`)"

  expose-client:
    extends:
      service: a_client
    image: ${REGISTRY_NAMESPACE}expose-client:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./expose/client/Dockerfile
    profiles:
      - expose
    environment:
      - EXPOSE_API_URL
      - S3_REQUEST_SIGNATURE_TTL=${EXPOSE_REQUEST_SIGNATURE_TTL}
      - CLIENT_ID=${EXPOSE_CLIENT_ID}
      - DISABLE_INDEX_PAGE=${EXPOSE_DISABLE_INDEX_PAGE}
      - MATOMO_SITE_ID=${EXPOSE_MATOMO_SITE_ID}
    labels:
      - "traefik.http.routers.expose-client-dev.rule=Host(`expose.${PHRASEA_DOMAIN}`)"

  uploader-client:
    extends:
      service: a_client
    image: ${REGISTRY_NAMESPACE}uploader-client:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./uploader/client/Dockerfile
    profiles:
      - uploader
    environment:
      - UPLOADER_API_URL
      - CLIENT_ID=${UPLOADER_CLIENT_ID}
      - ALLOWED_FILE_TYPES=${UPLOADER_ALLOWED_FILE_TYPES}
    labels:
      - "traefik.http.routers.uploader-client-dev.rule=Host(`uploader.${PHRASEA_DOMAIN}`)"

  expose-api-php:
    extends:
      service: a_s3-php
    profiles:
      - expose
    image: ${REGISTRY_NAMESPACE}expose-api-php:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./expose/api/Dockerfile
    environment:
      - DEV_MODE
      - RABBITMQ_VHOST=${EXPOSE_RABBITMQ_VHOST}
      - ADMIN_CLIENT_ID=${EXPOSE_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_SECRET=${EXPOSE_ADMIN_CLIENT_SECRET}
      - S3_REQUEST_SIGNATURE_TTL=${EXPOSE_REQUEST_SIGNATURE_TTL}
      - S3_USE_PATH_STYLE_ENDPOINT=${EXPOSE_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - EXPOSE_API_URL
      - EXPOSE_CLIENT_URL
      - UPLOAD_MAX_FILE_SIZE
      - ZIPPY_CLIENT_ID
      - ZIPPY_CLIENT_SECRET
      - ZIPPY_URL
      - SIDEBAR_DEFAULT_OPEN=${EXPOSE_SIDEBAR_DEFAULT_OPEN}
      - MAPBOX_TOKEN
      - EXPOSE_CLIENT_LOGO_URL
      - EXPOSE_CLIENT_LOGO_ALT
      - NEWRELIC_APP_NAME=expose-api
      - CLOUD_FRONT_URL=${EXPOSE_CLOUD_FRONT_URL}
      - CLOUD_FRONT_REGION=${EXPOSE_CLOUD_FRONT_REGION}
      - CLOUD_FRONT_PRIVATE_KEY=${EXPOSE_CLOUD_FRONT_PRIVATE_KEY}
      - CLOUD_FRONT_KEY_PAIR_ID=${EXPOSE_CLOUD_FRONT_KEY_PAIR_ID}
      - CLOUD_FRONT_TTL=${EXPOSE_CLOUD_FRONT_TTL}
      - MATOMO_URL
      - MATOMO_SITE_ID=${EXPOSE_MATOMO_SITE_ID}
      - MATOMO_AUTH_TOKEN
      - PHRASEANET_APP_OAUTH_TOKEN
      - PHRASEANET_URL
    extra_hosts:
      - zippy.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - phraseanet.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  expose-worker:
    extends:
      service: expose-api-php
    image: ${REGISTRY_NAMESPACE}expose-worker:${DOCKER_TAG}
    build:
      target: worker
    deploy:
      replicas: $EXPOSE_WORKER_REPLICAS
    environment:
      - WORKER_PRIORITIES=p1

  expose-api-nginx:
    profiles:
      - expose
    image: ${REGISTRY_NAMESPACE}expose-api-nginx:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./expose/api/Dockerfile
      target: api-nginx
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
    volumes:
      - expose-nginx-cache:/var/cache/nginx
    networks:
      - internal
    depends_on:
      - expose-api-php
    environment:
      - UPLOAD_MAX_FILE_SIZE
      - PS_SUBNET
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.expose-api.rule=Host(`api-expose.${PHRASEA_DOMAIN}`)"

  notify-api-php:
    extends:
      service: a_api-php
    profiles:
      - notify
    image: ${REGISTRY_NAMESPACE}notify-api-php:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./notify/api/Dockerfile
    environment:
      - RABBITMQ_VHOST=${NOTIFY_RABBITMQ_VHOST}
      - ADMIN_CLIENT_ID=${NOTIFY_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_SECRET=${NOTIFY_ADMIN_CLIENT_SECRET}
      - REPORT_API_URL
      - MAILER_DSN
      - MAIL_FROM
      - NEWRELIC_APP_NAME=notify-api

  notify-worker:
    extends:
      service: notify-api-php
    image: ${REGISTRY_NAMESPACE}notify-worker:${DOCKER_TAG}
    build:
      target: worker
    deploy:
      replicas: $NOTIFY_WORKER_REPLICAS

  notify-api-nginx:
    profiles:
      - notify
    image: ${REGISTRY_NAMESPACE}notify-api-nginx:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./notify/api/Dockerfile
      target: api-nginx
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
    networks:
      - internal
    depends_on:
      - notify-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.notify-api.rule=Host(`api-notify.${PHRASEA_DOMAIN}`)"

  redis:
    profiles:
      - db
    image: redis:5.0.5-alpine
    networks:
      - internal
    volumes:
      - redis:/data

  db:
    profiles:
      - db
    image: postgres:14.4-alpine
    hostname: postgres
    networks:
      - internal
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db:/var/lib/postgresql/data

  rabbitmq:
    profiles:
      - db
    image: rabbitmq:3.7.14-management
    hostname: rabbitmq
    networks:
      - internal
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.rabbitmq-console.rule=Host(`rabbitmq-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.rabbitmq-console.loadbalancer.server.port=15672"

  dockerize:
    profiles:
      - setup
    image: jwilder/dockerize:0.6.1
    networks:
      - internal
    command:
      - "-wait"
      - "tcp://db:5432"
      - "-wait"
      - "tcp://rabbitmq:5672"
      - "-wait"
      - "http://elasticsearch:9200"
      - "-wait"
      - "tcp://minio:9000"
      - "-timeout"
      - "200s"
      - "--"
      - "echo"
      - "ready"

  minio:
    profiles:
      - db
    image: minio/minio:RELEASE.2021-11-24T23-19-33Z.hotfix.1d85a4563
    networks:
      - internal
    command: server /data --console-address ":9001"
    volumes:
      - s3:/data
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_CONSOLE_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.minio.rule=Host(`minio.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  minio-mc:
    profiles:
      - setup
    image: minio/mc:RELEASE.2020-09-18T00-13-21Z
    networks:
      - internal
    command: exit 0
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_SECRET_KEY}
      EXPOSE_STORAGE_BUCKET_NAME: ${EXPOSE_STORAGE_BUCKET_NAME}
      UPLOADER_STORAGE_BUCKET_NAME: ${UPLOADER_STORAGE_BUCKET_NAME}
      DATABOX_STORAGE_BUCKET_NAME: ${DATABOX_STORAGE_BUCKET_NAME}

  matomo-php:
    profiles:
      - matomo
    image: ${REGISTRY_NAMESPACE}matomo-php:${DOCKER_TAG}
    build: ./infra/docker/matomo-php
    networks:
      - internal
    depends_on:
      - matomo-db
    environment:
      - MATOMO_DATABASE_HOST=matomo-db
      - MATOMO_DATABASE_USERNAME
      - MATOMO_DATABASE_PASSWORD
      - MATOMO_DATABASE_DBNAME
    volumes:
      - matomo:/var/www/html

  matomo-nginx:
    profiles:
      - matomo
    image: ${REGISTRY_NAMESPACE}matomo-nginx:${DOCKER_TAG}
    build: ./infra/docker/matomo-nginx
    networks:
      - internal
    depends_on:
      - matomo-php
    volumes:
      - matomo:/var/www/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.matomo.rule=Host(`matomo.${PHRASEA_DOMAIN}`)"

  matomo-db:
    profiles:
      - matomo
    image: mariadb:10.4.10-bionic
    command:
      - "mysqld"
      - "--max_allowed_packet=64MB"
    networks:
      internal:
        aliases:
          - matomo-db
    environment:
      - MYSQL_ROOT_PASSWORD=$MATOMO_MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MATOMO_DATABASE_DBNAME
      - MYSQL_USER=$MATOMO_DATABASE_USERNAME
      - MYSQL_PASSWORD=$MATOMO_DATABASE_PASSWORD
    volumes:
      - matomodb:/var/lib/mysql

  report-api:
    profiles:
      - report
    image: ${REGISTRY_NAMESPACE}report-api:${DOCKER_TAG}
    build: report
    networks:
      - internal
    environment:
      - APP_ENV
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${REPORT_DB_NAME}

  pgadmin:
    profiles:
      - tools
    image: dpage/pgadmin4:8.6
    networks:
      - internal
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_SERVER_JSON_FILE=/data/server.json
    depends_on:
      - db
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./infra/docker/pgadmin/server.json:/data/server.json
      - ./infra/docker/pgadmin/passfile:/data/passfile
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${PHRASEA_DOMAIN}`)"

  phpmyadmin:
    profiles:
      - tools
    image: phpmyadmin/phpmyadmin
    networks:
      - internal
    environment:
      - PMA_HOST=matomo-db
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.phpmyadmin.rule=Host(`pma.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.phpmyadmin.middlewares=admin-secured@docker"

  mailhog:
    profiles:
      - mailhog
    image: mailhog/mailhog
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.mailhog.middlewares=admin-secured@docker"

  dashboard:
    extends:
      service: a_client
    profiles:
      - dashboard
    image: ${REGISTRY_NAMESPACE}dashboard:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./dashboard/client/Dockerfile
    networks:
      - internal
    environment:
      - DATABOX_API_URL
      - DATABOX_CLIENT_URL
      - DEV_MODE
      - DISPLAY_SERVICES_MENU
      - ELASTICHQ_URL
      - EXPOSE_API_URL
      - EXPOSE_CLIENT_URL
      - KEYCLOAK_URL
      - MAILHOG_URL
      - MATOMO_URL
      - NOTIFY_API_URL
      - PGADMIN_URL
      - PHPMYADMIN_URL
      - RABBITMQ_CONSOLE_URL
      - REPORT_API_URL
      - SAML2_URL
      - SAML_URL
      - STACK_NAME=${COMPOSE_PROJECT_NAME}
      - STACK_VERSION=${DOCKER_TAG}
      - TRAEFIK_CONSOLE_URL
      - UPLOADER_API_URL
      - UPLOADER_CLIENT_URL
      - ZIPPY_URL
      - SENTRY_DSN
      - SENTRY_ENVIRONMENT
      - SENTRY_RELEASE
      - CLIENT_ID=${DASHBOARD_CLIENT_ID}
      - SOKETI_USAGE_URL
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${PHRASEA_DOMAIN}`)"

  databox-api-php:
    extends:
      service: a_s3-php
    profiles:
      - databox
    image: ${REGISTRY_NAMESPACE}databox-api-php:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./databox/api/Dockerfile
    environment:
      - DATABOX_API_URL
      - DATABOX_CLIENT_URL
      - RABBITMQ_VHOST=${DATABOX_RABBITMQ_VHOST}
      - ADMIN_CLIENT_ID=${DATABOX_ADMIN_CLIENT_ID}
      - ADMIN_CLIENT_SECRET=${DATABOX_ADMIN_CLIENT_SECRET}
      - EXPOSE_API_URL
      - EXPOSE_ADMIN_CLIENT_ID=${EXPOSE_ADMIN_CLIENT_ID}
      - EXPOSE_ADMIN_CLIENT_SECRET=${EXPOSE_ADMIN_CLIENT_SECRET}
      - ELASTICSEARCH_URL
      - ELASTICSEARCH_INDEX_PREFIX
      - S3_PATH_PREFIX
      - S3_REQUEST_SIGNATURE_TTL=${DATABOX_REQUEST_SIGNATURE_TTL}
      - S3_USE_PATH_STYLE_ENDPOINT=${DATABOX_STORAGE_USE_PATH_STYLE_ENDPOINT}
      - S3_BUCKET_NAME=${DATABOX_STORAGE_BUCKET_NAME}
      - UPLOAD_MAX_FILE_SIZE
      - NEWRELIC_APP_NAME=databox-api
      - ZIPPY_CLIENT_ID
      - ZIPPY_CLIENT_SECRET
      - ZIPPY_URL
      - CLOUD_FRONT_URL=${DATABOX_CLOUD_FRONT_URL}
      - CLOUD_FRONT_REGION=${DATABOX_CLOUD_FRONT_REGION}
      - CLOUD_FRONT_PRIVATE_KEY=${DATABOX_CLOUD_FRONT_PRIVATE_KEY}
      - CLOUD_FRONT_KEY_PAIR_ID=${DATABOX_CLOUD_FRONT_KEY_PAIR_ID}
      - CLOUD_FRONT_TTL=${DATABOX_CLOUD_FRONT_TTL}
      - CLARIFAI_API_KEY
      - SECRETS_PUBLIC_KEY=${DATABOX_SECRETS_PUBLIC_KEY}
      - PWI_PHRASEANET_URL=${PHRASEANET_URL}
      - PWI_PHRASEANET_API_TOKEN=${PHRASEANET_APP_OAUTH_TOKEN}
      - PWI_EXPOSE_API_URL=${EXPOSE_API_URL}
      - PWI_EXPOSE_CLIENT_URL=${EXPOSE_CLIENT_URL}
      - SOKETI_HOST=soketi.${PHRASEA_DOMAIN}
      - SOKETI_APP_ID
      - SOKETI_KEY
      - SOKETI_SECRET
    depends_on:
      - redis
      - elasticsearch
    extra_hosts:
      - api-uploader.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-expose.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - ${PHRASEANET_DOMAIN}:${PS_GATEWAY_IP}
      - webhook-endpoint.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - zippy.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - soketi.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  databox-worker:
    extends:
      service: databox-api-php
    image: ${REGISTRY_NAMESPACE}databox-worker:${DOCKER_TAG}
    build:
      target: worker
    deploy:
      replicas: $DATABOX_WORKER_REPLICAS
    environment:
      - SECRETS_SECRET_KEY=${DATABOX_SECRETS_SECRET_KEY}
      - WORKER_PRIORITIES=p1 p2

  databox-api-nginx:
    profiles:
      - databox
    image: ${REGISTRY_NAMESPACE}databox-api-nginx:${DOCKER_TAG}
    build:
      context: ./
      dockerfile: ./databox/api/Dockerfile
      target: api-nginx
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
    networks:
      internal:
        aliases:
          - databox-api
    environment:
      - UPLOAD_MAX_FILE_SIZE
    depends_on:
      - databox-api-php
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.databox-api.rule=Host(`api-databox.${PHRASEA_DOMAIN}`)"

  databox-indexer:
    image: ${REGISTRY_NAMESPACE}databox-indexer:${DOCKER_TAG}
    command: [ "/bin/sh", "-c", "exit" ]
    build:
      context: ./
      dockerfile: ./databox/indexer/Dockerfile
    profiles:
      - indexer
    networks:
      - internal
    environment:
      - AMQP_DSN=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/s3events
      - IMPORT_FILES=${INDEXER_IMPORT_FILES}
      - CONFIG_FILE=${INDEXER_CONFIG_FILE}
      - DATABOX_API_URL
      - DATABOX_VERIFY_SSL=${VERIFY_SSL}
      - DATABOX_CLIENT_ID=${INDEXER_DATABOX_CLIENT_ID}
      - DATABOX_CLIENT_SECRET=${INDEXER_DATABOX_CLIENT_SECRET}
      - DATABOX_CONCURRENCY=${INDEXER_DATABOX_CONCURRENCY}
      - DATABOX_WORKSPACE_SLUG=${INDEXER_DATABOX_WORKSPACE_SLUG}
      - DATABOX_OWNER_ID=${INDEXER_DATABOX_OWNER_ID}
      - PUBLIC_URL=${DATABOX_INDEXER_URL}
      - S3_ENDPOINT
      - S3_PATH_PREFIX
      - S3_REQUEST_SIGNATURE_TTL=${DATABOX_REQUEST_SIGNATURE_TTL}
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_REGION
      - S3_BUCKET_NAME=${INDEXER_BUCKET_NAME}
      - BUCKET_NAMES=${INDEXER_BUCKET_NAME}
      - WATCH_DIR=${INDEXER_WATCH_DIR}
      - WATCH_DIR_PREFIX=${INDEXER_WATCH_DIR_PREFIX}
      - WATCH_SOURCE_DIR=${INDEXER_WATCH_SOURCE_DIR}
      - PHRASEANET_URL
      - PHRASEANET_APP_OAUTH_TOKEN
      - PHRASEANET_VERIFY_SSL
      - PHRASEANET_DATABOX=${INDEXER_PHRASEANET_DATABOX}
      - PHRASEANET_COLLECTIONS=${INDEXER_PHRASEANET_COLLECTIONS}
      - PHRASEANET_SEARCH_QUERY=${INDEXER_PHRASEANET_SEARCH_QUERY}
      - PHRASEANET_SEARCH_ORDER=${INDEXER_PHRASEANET_SEARCH_ORDER}
      - PHRASEANET_RECORDS_COLLECTION_PATH=${INDEXER_RECORDS_COLLECTION_PATH}
      - PHRASEANET_STORIES_COLLECTION_PATH=${INDEXER_STORIES_COLLECTION_PATH}
    volumes:
      - ./databox/indexer/config:/srv/workspace/databox/indexer/config
      - ${INDEXER_WATCH_SOURCE_DIR}:${INDEXER_WATCH_DIR}
    extra_hosts:
      - api-databox.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - ${PHRASEANET_DOMAIN}:${PS_GATEWAY_IP}
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.databox-indexer.rule=Host(`databox-indexer.${PHRASEA_DOMAIN}`)"

  elasticsearch:
    profiles:
      - databox
    image: elasticsearch:7.17.3
    networks:
      - internal
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  elastichq:
    profiles:
      - tools
    image: elastichq/elasticsearch-hq
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.elastichq.rule=Host(`elastichq.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.elastichq.middlewares=admin-secured@docker"

  k6:
    profiles:
      - loadtest
    image: grafana/k6:0.26.2
    networks:
      - internal
    command: '' # Manually run 'dc run --rm k6 run /scripts/src/main.js'
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./infra/load-test:/scripts
    extra_hosts:
      - expose.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-expose.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - databox.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-databox.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  influxdb:
    image: influxdb:1.8
    profiles:
      - loadtest
    networks:
      - internal
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:8.4.2
    profiles:
      - loadtest
    networks:
      - internal
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./infra/docker/grafana:/etc/grafana/provisioning
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.grafana.middlewares=admin-secured@docker"

  webhook-endpoint:
    image: mendhak/http-https-echo:23
    profiles:
      - webhooks
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.webhook-endpoint.rule=Host(`webhook-endpoint.${PHRASEA_DOMAIN}`)"

  zippy-api: &zippy
    image: alchemyfr/zippy-api:latest
    profiles:
      - zippy
    networks:
      - internal
    environment:
      - APP_ENV
      - VERIFY_SSL
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - TRUSTED_PROXIES
      - CLIENT_ID=${ZIPPY_CLIENT_ID}
      - CLIENT_SECRET=${ZIPPY_CLIENT_SECRET}
      - ZIPPY_URL
    volumes:
      - zippy:/data
    depends_on:
      - rabbitmq
    extra_hosts:
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.zippy.rule=Host(`zippy.${PHRASEA_DOMAIN}`)"

  zippy-worker:
    <<: *zippy
    image: alchemyfr/zippy-worker:latest
    labels: []

  zippy-cron:
    extends:
      service: zippy-worker
    command: ['/srv/app/docker/cron/start-cron.sh']

  keycloak:
    image: ${REGISTRY_NAMESPACE}keycloak:${DOCKER_TAG}
    build:
      context: ./infra/docker/keycloak
      target: keycloak
    command:
      - 'start'
      - '--optimized'
    networks:
      - internal
    environment:
      - KC_PROXY=edge
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - KC_HOSTNAME=https://keycloak.${PHRASEA_DOMAIN}${HTTPS_PORT_PREFIX}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${KEYCLOAK_DB_NAME}
    extra_hosts:
      - keycloak2.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  keycloak2:
    image: ${REGISTRY_NAMESPACE}keycloak:${DOCKER_TAG}
    command:
      - 'start'
      - '--optimized'
    networks:
      - internal
    profiles:
      - openid
    environment:
      - KC_PROXY=edge
      - KEYCLOAK_ADMIN=${KEYCLOAK2_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK2_ADMIN_PASSWORD}
      - KC_HOSTNAME=https://keycloak2.${PHRASEA_DOMAIN}${HTTPS_PORT_PREFIX}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${KEYCLOAK2_DB_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.keycloak2.rule=Host(`keycloak2.${PHRASEA_DOMAIN}`)"
      - "traefik.http.services.keycloak2.loadbalancer.server.port=8080"

  configurator:
    image: ${REGISTRY_NAMESPACE}configurator:${DOCKER_TAG}
    build:
      context: ./configurator
      args:
        BASE_TAG: ${DOCKER_TAG}
        REGISTRY_NAMESPACE: ${REGISTRY_NAMESPACE}
    networks:
      - internal
    profiles:
      - configurator
    environment:
      - APP_ENV
      - KEYCLOAK_URL
      - KEYCLOAK_REALM_NAME
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - VERIFY_SSL
      - DATABOX_API_URL
      - NOTIFY_API_URL
      - EXPOSE_API_URL
      - UPLOADER_API_URL
      - EXPOSE_ADMIN_CLIENT_ID
      - EXPOSE_ADMIN_CLIENT_SECRET
      - UPLOADER_ADMIN_CLIENT_ID
      - UPLOADER_ADMIN_CLIENT_SECRET
      - NOTIFY_ADMIN_CLIENT_ID
      - NOTIFY_ADMIN_CLIENT_SECRET
      - DATABOX_ADMIN_CLIENT_ID
      - DATABOX_ADMIN_CLIENT_SECRET
      - DATABOX_CLIENT_ID
      - EXPOSE_CLIENT_ID
      - UPLOADER_CLIENT_ID
      - DASHBOARD_CLIENT_ID
      - DATABOX_CLIENT_URL
      - EXPOSE_CLIENT_URL
      - UPLOADER_CLIENT_URL
      - DASHBOARD_CLIENT_URL=${DASHBOARD_CLIENT_URL}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CONFIGURATOR_DB_NAME
      - AUTH_DB_NAME
      - DATABOX_DB_NAME
      - EXPOSE_DB_NAME
      - NOTIFY_DB_NAME
      - UPLOADER_DB_NAME
      - MAIL_FROM
      - MAILER_DSN
      - DEFAULT_ADMIN_USERNAME
      - DEFAULT_ADMIN_PASSWORD
      - INDEXER_DATABOX_CLIENT_ID
      - INDEXER_DATABOX_CLIENT_SECRET
      - PHRASEA_DOMAIN
    extra_hosts:
      - keycloak.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
    volumes:
      - ./configs:/configs

  cypress:
    build: ./cypress
    profiles:
      - cypress
    environment:
      - CYPRESS_BASE_URL=${DASHBOARD_CLIENT_URL}
      - MAILHOG_URL
      - CYPRESS_EXPOSE_CLIENT_URL=${EXPOSE_CLIENT_URL}
      - CYPRESS_EXPOSE_API_URL=${EXPOSE_API_URL}
      - CYPRESS_KEYCLOAK_URL=${KEYCLOAK_URL}
      - CYPRESS_KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - CYPRESS_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME}
      - CYPRESS_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
      - CYPRESS_EXPOSE_ADMIN_CLIENT_ID=${EXPOSE_ADMIN_CLIENT_ID}
      - CYPRESS_EXPOSE_ADMIN_CLIENT_SECRET=${EXPOSE_ADMIN_CLIENT_SECRET}
    volumes:
      - cypress_output:/cypress/output
    extra_hosts:
      - expose.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - api-expose.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - dashboard.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - minio.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}
      - keycloak.${PHRASEA_DOMAIN}:${PS_GATEWAY_IP}

  soketi:
    profiles:
      - soketi
    image: quay.io/soketi/soketi:330e1a60197d2b5798a3b3a2bcd211ec124148d8-16-alpine
    networks:
      - internal
    environment:
      - SOKETI_DEFAULT_APP_ID=${SOKETI_APP_ID}
      - SOKETI_DEFAULT_APP_KEY=${SOKETI_KEY}
      - SOKETI_DEFAULT_APP_SECRET=${SOKETI_SECRET}
      - SOKETI_DEFAULT_APP_MAX_CONNS=100
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.soketi.rule=Host(`soketi.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.soketi.service=soketi"
      - "traefik.http.services.soketi.loadbalancer.server.port=6001"
      - "traefik.http.routers.soketi-usage.rule=Host(`soketi-usage.${PHRASEA_DOMAIN}`)"
      - "traefik.http.routers.soketi-usage.service=soketi-usage"
      - "traefik.http.services.soketi-usage.loadbalancer.server.port=9601"
      - "traefik.project_name=${COMPOSE_PROJECT_NAME}"

volumes:
  db:
  redis:
  uploader: # rw-many
  s3:
  matomo:
  matomodb:
  pgadmin:
  rabbitmq:
  elasticsearch:
  expose-nginx-cache:
  zippy:
  cypress_output:
