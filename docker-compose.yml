version: '3.4'

networks:
  internal:

services:
  uploader_api_php:
    image: ${REGISTRY_NAMESPACE}uploader_api_php:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader_api_php
    networks:
      internal:
        aliases:
          - uploader_api_php
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - UPLOADER_BASE_URL
      - UPLOAD_TEMP_DIR=/var/data/upload
      - AUTH_CLIENT_ID=${UPLOADER_ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${UPLOADER_ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${UPLOADER_ADMIN_CLIENT_SECRET}
    volumes:
      - uploader_vol:/var/data/upload

  uploader_worker:
    image: ${REGISTRY_NAMESPACE}uploader_worker:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader_worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - ASSET_CONSUMER_COMMIT_URI
      - ASSET_CONSUMER_ACCESS_TOKEN
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - UPLOADER_BASE_URL
      - UPLOAD_TEMP_DIR=/var/data/upload
    volumes:
      - uploader_vol:/var/data/upload

  uploader_api_nginx:
    image: ${REGISTRY_NAMESPACE}uploader_api_nginx:$DOCKER_TAG
    build:
      context: ./uploader/api
      target: uploader_api_nginx
    networks:
      - internal
    ports:
      - ${UPLOADER_API_PORT}:80
    depends_on:
      - uploader_api_php

  uploader_client:
    image: ${REGISTRY_NAMESPACE}uploader_client:$DOCKER_TAG
    build:
      context: ./uploader/client
      target: uploader_client_nginx
    volumes:
      - ./configs:/configs
    ports:
      - ${UPLOADER_CLIENT_PORT}:80
    networks:
      - internal
    environment:
      - DEV_MODE
      - UPLOADER_BASE_URL
      - AUTH_BASE_URL
      - CLIENT_ID=${UPLOADER_CLIENT_ID}_${UPLOADER_CLIENT_RANDOM_ID}
      - CLIENT_SECRET=${UPLOADER_CLIENT_SECRET}

  auth_worker:
    image: ${REGISTRY_NAMESPACE}auth_worker:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth_worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - AUTH_BASE_URL
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

  auth_api_php:
    image: ${REGISTRY_NAMESPACE}auth_api_php:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth_api_php
    networks:
      internal:
        aliases:
          - auth_api_php
    environment:
      - APP_ENV
      - AUTH_BASE_URL
      - REGISTRATION_VALIDATE_EMAIL=${AUTH_REGISTRATION_VALIDATE_EMAIL}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - MAILER_URL
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./configs:/configs
    depends_on:
      - redis
      - rabbitmq
      - db

  auth_api_nginx:
    image: ${REGISTRY_NAMESPACE}auth_api_nginx:$DOCKER_TAG
    build:
      context: ./auth/api
      target: auth_api_nginx
    networks:
      internal:
        aliases:
          - auth_api
    ports:
      - ${AUTH_PORT}:80
    depends_on:
      - auth_api_php

  redis:
    image: redis:5.0.5-alpine
    networks:
      - internal
    volumes:
      - redis_vol:/data

  db:
    image: postgres:11.2-alpine
    hostname: postgres
    networks:
      - internal
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=${WEBLATE_POSTGRES_DB}
    volumes:
      - db_vol:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.7.14-management
    networks:
      - internal
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    ports:
      - ${RABBITMQ_MGT_PORT}:15672

  dockerize:
    image: jwilder/dockerize
    networks:
      - internal
    command: ["dockerize", "-wait", "tcp://db:5432", "-wait", "tcp://rabbitmq:5672", "-timeout", "50s", "--", "echo", "ready"]

  expose_api_php:
    image: ${REGISTRY_NAMESPACE}expose_api_php:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose_api_php
    networks:
      internal:
        aliases:
          - expose_api_php
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY

  expose_worker:
    image: ${REGISTRY_NAMESPACE}expose_worker:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose_worker
    networks:
      - internal
    depends_on:
      - rabbitmq
      - db
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - STORAGE_BUCKET_NAME=${EXPOSE_STORAGE_BUCKET_NAME}
      - S3_STORAGE_ACCESS_KEY
      - S3_STORAGE_SECRET_KEY

  expose_api_nginx:
    image: ${REGISTRY_NAMESPACE}expose_api_nginx:$DOCKER_TAG
    build:
      context: ./expose/api
      target: expose_api_nginx
    networks:
      internal:
        aliases:
          - expose_api
    ports:
      - ${EXPOSE_API_PORT}:80
    depends_on:
      - expose_api_php

  expose_front:
    image: ${REGISTRY_NAMESPACE}expose_front:$DOCKER_TAG
    build:
      context: ./expose/front
      target: expose_front_nginx
    volumes:
      - ./configs:/configs
    ports:
      - ${EXPOSE_FRONT_PORT}:80
    networks:
      - internal
    environment:
      - DEV_MODE
      - EXPOSE_BASE_URL
      - AUTH_BASE_URL
      - CLIENT_ID=${EXPOSE_CLIENT_ID}_${EXPOSE_CLIENT_RANDOM_ID}
      - CLIENT_SECRET=${EXPOSE_CLIENT_SECRET}

  notify_api_php:
    image: ${REGISTRY_NAMESPACE}notify_api_php:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify_api_php
    networks:
      internal:
        aliases:
          - notify_api_php
    volumes:
      - ./configs:/configs
    depends_on:
      - rabbitmq
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - AUTH_CLIENT_ID=${UPLOADER_ADMIN_CLIENT_ID}
      - AUTH_CLIENT_RANDOM_ID=${UPLOADER_ADMIN_CLIENT_RANDOM_ID}
      - AUTH_CLIENT_SECRET=${UPLOADER_ADMIN_CLIENT_SECRET}

  notify_worker:
    image: ${REGISTRY_NAMESPACE}notify_worker:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify_worker
    networks:
      - internal
    depends_on:
      - rabbitmq
    environment:
      - APP_ENV
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

  notify_api_nginx:
    image: ${REGISTRY_NAMESPACE}notify_api_nginx:$DOCKER_TAG
    build:
      context: ./notify/api
      target: notify_api_nginx
    networks:
      internal:
        aliases:
          - notify_api
    ports:
      - ${NOTIFY_PORT}:80
    depends_on:
      - notify_api_php

  minio:
    image: minio/minio
    networks:
      - internal
    command: server /data
    volumes:
      - s3_vol:/data
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}

  minio_mc:
    image: minio/mc
    networks:
      - internal
    command: exit 0
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}

  weblate:
    image: weblate/weblate:3.8-4
    volumes:
      - weblate_vol:/app/data
    networks:
      - internal
    ports:
      - ${WEBLATE_PORT}:8080
    depends_on:
      - db
      - redis
    environment:
      - WEBLATE_EMAIL_HOST
      - WEBLATE_EMAIL_PORT
      - WEBLATE_EMAIL_HOST_USER
      - WEBLATE_EMAIL_HOST_PASSWORD
      - WEBLATE_ALLOWED_HOSTS
      - WEBLATE_ADMIN_PASSWORD
      - WEBLATE_EMAIL_USE_TLS=0
      - WEBLATE_EMAIL_USE_SSL=0
      - WEBLATE_ADMIN_EMAIL
      - WEBLATE_ADMIN_NAME
      - WEBLATE_SERVER_EMAIL=$WEBLATE_SERVER_EMAIL
      - WEBLATE_DEFAULT_FROM_EMAIL=weblate@example.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE=${WEBLATE_POSTGRES_DB}
      - POSTGRES_HOST=db

volumes:
  weblate_vol:
  db_vol:
  redis_vol:
  uploader_vol:
  s3_vol:
